{"version":3,"sources":["App.module.css","Header/Header.module.css","Assets/sign-out.svg","Assets/google-plus.svg","Assets/github.svg","Assets/youtube.svg","Assets/print.svg","Assets/translate.svg","Assets/spinner.svg","Components/Preloader/Preloader.module.css","Content/Content.module.css","Footer/Footer.module.css","Assets/exit.svg","Assets/google.svg","ErrorBar/ErrorBar.module.css","redux/stickers-selectors.js","utils/htmlToPdf.js","utils/validators.js","hoc/withInitialValue.js","Components/FormsControls/FormsControls.js","ReadSpreadsheet/ReadPhrasebookByIdForm.js","ReadSpreadsheet/ReadSpreadsheet.js","API/GDriveAPI.js","redux/spreadsheet-reducer.js","API/GSheetsAPI.js","redux/error-reducer.js","redux/stickers-reducer.ts","redux/spreadsheet-selectors.js","ReadSpreadsheet/ReadSpreadsheetContainter.js","Header/Header.js","API/GAPI.js","Social/SocialUrl.js","SignInWithGoogle/SignInWithGoogle.js","redux/signin-reducer.js","redux/signin-selectors.js","SignInWithGoogle/SigninWitGoogleContainer.js","ErrorBar/ErrorBar.js","redux/error-selectors.js","ErrorBar/ErrorBarContainer.js","Navbar/Navbar.jsx","Navbar/NavbarContainer.js","Stickers/Sticker/Sticker.js","Stickers/Stickers.js","Stickers/StickersContainer.js","Components/Preloader/Preloader.js","Stickers/PlaySticker/PlaySticker.js","Stickers/PlaySticker/PlayStickerContainer.js","Content/Content.jsx","Footer/Footer.jsx","Components/SplashScreen/SplashScreen.js","Components/IFrame/IFrame.js","App.js","AppContainer.js","redux/gdrive-reducer.js","redux/store-redux.js","index.js","Stickers/Sticker/Sticker.module.css","Stickers/PlaySticker/PlaySticker.module.css","Common.module.css","ReadSpreadsheet/ReadSpreadsheet.module.css","Components/FormsControls/FormControls.module.css","Assets/preloader.svg","SignInWithGoogle/SignInWithGoogle.module.css","Navbar/Navbar.module.css","Stickers/Stickers.module.css","Components/SplashScreen/SplashScreen.module.css","Components/IFrame/IFrame.module.css"],"names":["module","exports","getIsFetchingStickers","state","stickersPage","isFetchingStickers","getStickersAreFetched","stickersAreFetched","getPdfRef","pdf","getStickersSelector","createSelector","stickers","filter","s","getIsGeneratingPdf","isGeneratingPdf","getIsShowIframe","isShowIframe","getPdfOutput","pdfOutput","htmlToPdf","pageHeightPixels","pageOrientation","pdfRef","fileName","a","input","current","numPages","scrollHeight","Math","floor","html2canvas","windowHeight","canvas","pagesCanvases","i","pageCanvas","cropPage","push","jsPDF","orientation","compress","length","addPage","imgData","toDataURL","addImage","output","pageHeight","offset","pageData","getContext","getImageData","width","document","createElement","pageContext","height","putImageData","Component","inputRef","React","createRef","Input","meta","label","props","hasError","touched","error","className","formControl","ref","value","undefined","required","lenght44","reduxForm","form","handleSubmit","onChangeSpreadsheetId","onSubmit","Field","name","validate","component","onChange","floatRight","cs","button","this","setInitialValue","ReadSpreadsheet","updateSpreadsheetId","getLatestSpreadsheetId","getStickers","spreadseetId","bar","values","spreadsheetId","e","target","id","onClick","orderByCreatedTime","arr","n","j","Date","parse","createdTime","temp","getLastCreatedFile","files","sorted","listFiles","success","window","gapi","client","drive","list","q","response","result","initialState","localStorage","getItem","newSpreadseetId","type","spreadsheetReducer","action","setItem","getValues","fail","sheets","spreadsheets","get","range","message","updateError","newError","errorReducer","previewStickersEn","previewStickersRus","getInitialiseStickers","eng","split","rus","dynamicInitialStickers","sticker","content","Foreign","Spelling","Native","isMouseOver","isStudied","dispatch","updateIsFetchingStickers","updateStickersAreFetched","lastCreatedFile","spreadsheetLines","getValuesSuccess","getValuesError","map","lineCells","index","updateStickers","reverse","updatePdf","newPdf","newStickers","mouseOverSticker","stickerId","mouseLeaveSticker","studiedSticker","info","updateIsShowIframe","updatePdfOutput","stickersReducer","copy","getSpreadseetId","spreadsheetPage","ReadSpreadsheetContainter","connect","ReadSpreadsheat","DISCOVERY_DOCS","getInstance","auth2","getAuthInstance","initGAPI","observer","init","apiKey","clientId","discoveryDocs","scope","getProfile","currentUser","getBasicProfile","listenAuth2","isSignedIn","listen","getIsSignedIn","signInAuth2","signIn","loadAuth2","load","SocialUrl","url","icon","href","src","SignInWithGoogle","initClient","updateSigninStatus","showError","JSON","stringify","profile","updateProfile","updateIsSignedIn","avatar","googlePlus","signOut","spredsheetLink","align","getImageUrl","signOutImg","main","getUserInfo","getButton","signinReducer","signInPage","SigninWithGoogleContainer","SigninWithGoogle","ErrorBar","console","log","getErrorSelector","errorPage","ErrorBarContainer","Navbar","updateIsGeneratingPdf","onClickPdf","newPdfOutput","navbar","print","spinner","translate","youtube","github","NavbarContainter","Sticker","onMouseOver","onMouseLeave","onStudied","mouseOver","MouseOver","studied","Studied","Part","Stickers","stickersCounter","stickersRow","forEach","StickersRow","buildStickersPage","StickersContainer","PlaySticker","PlayStickerContainer","random","Content","innerWidth","SplashScreen","splashScreen","preloader","IFrame","iframe","exitButton","exit","App","app_wrapper","AppContainer","phrasebookFilesTree","latestPhrasebookFile","allPhrasebookFiles","gdriveReducer","reducers","combineReducers","filesListPage","formReducer","store","createStore","applyMiddleware","thunkMiddleware","rerender","ReactDOM","render","getElementById","subscribe"],"mappings":"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","file":"static/js/main.5fd459a1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"app_wrapper\":\"App_app_wrapper__5i7wO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1m9KH\"};","module.exports = __webpack_public_path__ + \"static/media/sign-out.6065ce4a.svg\";","module.exports = __webpack_public_path__ + \"static/media/google-plus.2159790d.svg\";","module.exports = __webpack_public_path__ + \"static/media/github.486fae37.svg\";","module.exports = __webpack_public_path__ + \"static/media/youtube.496292e1.svg\";","module.exports = __webpack_public_path__ + \"static/media/print.c84ce011.svg\";","module.exports = __webpack_public_path__ + \"static/media/translate.e9b8835b.svg\";","module.exports = __webpack_public_path__ + \"static/media/spinner.513103c8.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloader\":\"Preloader_preloader__1EXfa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Content_content__3jYHC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__2RgBb\"};","module.exports = __webpack_public_path__ + \"static/media/exit.b8196adb.svg\";","module.exports = __webpack_public_path__ + \"static/media/google.7c9224eb.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"errorBar\":\"ErrorBar_errorBar__22dBJ\"};","import {createSelector} from \"reselect\";\n\nlet getStickers = (state) =>{\n    return state.stickersPage.stickers;\n}\n\nexport let getIsFetchingStickers = (state) =>{\n    return state.stickersPage.isFetchingStickers;\n}\n\nexport let getStickersAreFetched = (state) =>{\n    return state.stickersPage.stickersAreFetched;\n}\n\nexport let getPdfRef = (state) =>{\n    return state.stickersPage.pdf;\n}\n\nexport const getStickersSelector = createSelector(getStickers,\n    (stickers) => {\n    return stickers.filter(s => true);\n})\n\nexport let getIsGeneratingPdf = (state) =>{\n    return state.stickersPage.isGeneratingPdf;\n}\n\nexport let getIsShowIframe = (state) =>{\n    return state.stickersPage.isShowIframe;\n}\n\nexport let getPdfOutput = (state) =>{\n    return state.stickersPage.pdfOutput;\n}","import html2canvas from 'html2canvas';\nimport jsPDF from 'jspdf';\n\n\nexport let htmlToPdf = async (pageHeightPixels, pageOrientation, pdfRef, fileName) => {\n    var input = pdfRef.current;\n    const numPages = input.scrollHeight <= pageHeightPixels ? 1 : Math.floor(input.scrollHeight / pageHeightPixels) + 1;\n\n    const canvas = await html2canvas(input, { windowHeight: input.scrollHeight });\n\n    var pagesCanvases = [];\n\n    for (var i = 0; i < numPages; i++) {\n        var pageCanvas = cropPage(canvas, pageHeightPixels, pageHeightPixels * i);\n        pagesCanvases.push(pageCanvas)\n    }\n\n    let pdf = new jsPDF({\n        orientation: pageOrientation,\n        compress: true\n    });\n\n    for (var i = 0; i < pagesCanvases.length; i++) {\n        var pageCanvas = pagesCanvases[i];\n        if (i > 0) {\n            pdf.addPage();\n        }\n\n        const imgData = pageCanvas.toDataURL('image/png');\n        pdf.addImage(imgData, 'PNG', 0, 0);\n    }\n\n    return pdf.output('datauristring');\n}\n\nfunction cropPage(canvas, pageHeight, offset) {\n    var context = canvas.getContext(\"2d\");\n    var pageData = context.getImageData(0, offset, canvas.width, pageHeight);\n\n    var pageCanvas = document.createElement(\"canvas\");\n    var pageContext = pageCanvas.getContext(\"2d\");\n\n    pageCanvas.width = canvas.width;\n    pageCanvas.height = pageHeight;\n    pageContext.putImageData(pageData, 0, 0);\n\n    return pageCanvas;\n}\n","export const required = value => {\n    if (value) return undefined;\n\n    return 'Field is required';\n}\n\nexport const lenghtCreator = (length) => (value) => {\n    if (value && value.length > length) return `Length more than ${length} symbols`;\n    if (value && value.length < length) return `Length less than ${length} symbols`;\n\n    return undefined\n}\n","import React from 'react';\n\nexport const withInitialValue = (Component) => {\n\n    return class WithInitialValue extends React.Component {\n\n        componentDidUpdate(){\n            this.props.setInitialValue();\n        }\n\n        render() {\n            \n            return (\n                <Component {...this.props} />\n            )\n        }\n    }\n}\n","import React from 'react';\nimport s from './FormControls.module.css'\n\nexport const inputRef = React.createRef();\n\nexport const Input = ({ input, meta, label, ...props }) => {\n    const hasError = meta.touched && meta.error;\n    return (\n        <div>\n            {label ? <label className=\"w3-text-white\"><b>{label}</b></label> : \"\"}\n            {hasError ? <span className={`${s.formControl} ${s.error}`}>{meta.error}</span> : \"\"}\n            <input className={`w3-input w3-border ${s.formControl} ${hasError ? s.error : \"\"}`} ref={inputRef} {...input} value={undefined} {...props} />\n        </div>\n    )\n}","import React from 'react';\nimport { Field, reduxForm } from 'redux-form'\nimport { required, lenghtCreator } from './../utils/validators.js'\nimport { Input } from './../Components/FormsControls/FormsControls.js'\nimport { withInitialValue } from './../hoc/withInitialValue'\nimport s from './ReadSpreadsheet.module.css'\nimport cs from './../Common.module.css'\n\nconst lenght44 = lenghtCreator(44);\n\nconst ReadPhrasebookByIdForm = ({ handleSubmit, onChangeSpreadsheetId }) => {\n\n    return <form onSubmit={handleSubmit}>\n        <div className={s.form}>\n            <Field name=\"spreadsheetId\" label=\"Phrasebook ID: \" validate={[required, lenght44]} component={Input} onChange={onChangeSpreadsheetId} />\n            <div className={s.floatRight}>\n                <button className={cs.button} >Read specified phrasebook</button>\n            </div>\n        </div>\n    </form>\n}\n\n\nexport default reduxForm({ form: \"ReadPhrasebookById\" })(withInitialValue(ReadPhrasebookByIdForm));","import React, { Component } from 'react';\nimport s from './ReadSpreadsheet.module.css'\nimport cs from './../Common.module.css'\nimport { htmlToPdf } from './../utils/htmlToPdf'\nimport { inputRef } from './../Components/FormsControls/FormsControls.js'\nimport ReadPhrasebookByIdFormRedux from './ReadPhrasebookByIdForm'\n\nconst pageHeightPixels = 750;\nconst pdfFileName = \"Stickers to print.pdf\";\nconst pageOrientation = \"landscape\";\n\n\nconst ReadSpreadsheet = ({ updateSpreadsheetId, getLatestSpreadsheetId, getStickers, spreadseetId, pdf }) => {\n\n  let onChangeSpreadsheetId = (e) => {\n    updateSpreadsheetId(e.target.value);\n  }\n\n  let handleGetNewestSpreadsheetIdClick = () => {\n    getLatestSpreadsheetId();\n  }\n\n  let handleOnSubmit = (values) => {\n    getStickers(values.spreadsheetId);\n  }\n\n\n  let onClickPdf = () => {\n    htmlToPdf(pageHeightPixels, pageOrientation, pdf, pdfFileName);\n  }\n\n  let setInitialValue = () => {\n    if (spreadseetId) {\n      inputRef.current.value = spreadseetId;\n    }\n  }\n\n  return (\n    <div className={s.bar}>\n      <ReadPhrasebookByIdFormRedux onSubmit={handleOnSubmit} setInitialValue={setInitialValue} onChangeSpreadsheetId={onChangeSpreadsheetId} />\n      <button id=\"read_spreadsheet\" className={cs.button} onClick={handleGetNewestSpreadsheetIdClick}>Get newest phrasebook ID</button>\n      <button id=\"pdf\" className={cs.button} onClick={onClickPdf}>Dowdload stickers in pdf</button>\n    </div>\n  );\n\n}\n\nexport default ReadSpreadsheet;","const rus = \"Сохраненные переводы\";\nconst eng = \"Saved translations\";\n\nlet orderByCreatedTime = (arr) => {\n    let n = arr.length;\n    for (var i = 0; i < n - 1; i++) {\n        for (var j = 0; j < n - i - 1; j++) {\n            if ((Date.parse(arr[j].createdTime) > Date.parse(arr[j + 1].createdTime))) {\n                let temp = arr[j];\n                arr[j] = arr[j + 1];\n                arr[j + 1] = temp;\n            }\n        }\n    }\n    return arr;\n}\n\nexport let getLastCreatedFile = (files) => {\n    var sorted = orderByCreatedTime(files);\n    return sorted[sorted.length - 1];\n}\n\nexport let listFiles = async (success) => {\n    const response = await window.gapi.client.drive.files.list({\n        'pageSize': 100,\n        q: \"mimeType='application/vnd.google-apps.spreadsheet'\",\n        q: `name='${eng}' or name='${rus}'`,\n        'fields': \"nextPageToken, files(id, name, createdTime, modifiedTime)\"\n    });\n    success(response.result.files);\n}\n\n\nexport let cleanFiles = (filesList) => {\n    var sorted = orderByCreatedTime(filesList);\n\n    for (var i = 0; i < sorted.length - 1; i++) {\n        var request = window.gapi.client.drive.files.delete({\n            'fileId': sorted[i].id\n        });\n        request.execute(function (resp) {\n            console.log(resp);\n        });\n    }\n}\n","import { listFiles, getLastCreatedFile } from '../API/GDriveAPI'\n\nexport const UPDATE_SPREADSHEET_ID = 'UPDATE_SPREADSHEET_ID';\n\nvar initialState = {\n    spreadseetId: localStorage.getItem(UPDATE_SPREADSHEET_ID)\n}\n\nconst spreadsheetReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case UPDATE_SPREADSHEET_ID:\n            localStorage.setItem(UPDATE_SPREADSHEET_ID, action.newSpreadseetId);\n            return { ...state, spreadseetId: action.newSpreadseetId }\n        default:\n            return state;\n    }\n}\n\nexport const getLatestSpreadsheetId = () => {\n    return (dispatch) => {\n        listFiles((files) => {\n            var lastCreatedFile = getLastCreatedFile(files);\n            dispatch(updateSpreadsheetId(lastCreatedFile.id));\n        });\n    }\n}\n\nexport const updateSpreadsheetId = (newSpreadseetId) => ({ type: UPDATE_SPREADSHEET_ID, newSpreadseetId: newSpreadseetId });\n\n\nexport default spreadsheetReducer;","const RANGE = \"C:D\";\n\nexport let getValues = async (spreadsheetId, success, fail) => {\n    const response = await window.gapi.client.sheets.spreadsheets.values.get({\n        spreadsheetId: spreadsheetId,\n        range: RANGE,\n    });\n\n    if (response.result.error) {\n        fail(response.result.error.message);\n    }\n    else {\n        success(response.result.values);\n    }\n}","const UPDATE_ERROR = 'UPDATE_ERROR';\n\nvar initialState = {\n    error: \"\"\n}\n\nconst errorReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case UPDATE_ERROR:\n            return { ...state, error: action.newError }\n        default:\n            return state;\n    }\n}\n\nexport const updateError = (newError) => ({ type: UPDATE_ERROR, newError: newError });\n\nexport default errorReducer;","import React from 'react';\nimport { getValues } from '../API/GSheetsAPI'\nimport { listFiles, getLastCreatedFile } from '../API/GDriveAPI'\nimport { updateError } from './error-reducer';\nimport { updateSpreadsheetId } from './spreadsheet-reducer'\nimport { red } from 'color-name';\n\nconst UPDATE_PDF = 'UPDATE_PDF';\nconst UPDATE_STICKERS = 'UPDATE_STICKERS';\nconst RESET_STICKERS = 'RESET_STICKERS';\nconst MOUSE_OVER = 'MOUSE_OVER';\nconst MOUSE_LEAVE = 'MOUSE_LEAVE';\nconst STUDIED = 'STUDIED';\nconst IS_FETCHING_STICKERS = 'IS_FETCHING_STICKERS';\nconst STICKERS_ARE_FETCHED = 'STICKERS_ARE_FETCHED';\nconst IS_GENERATING_PDF = 'IS_GENERATING_PDF';\nconst IS_SHOW_IFRAME = 'IS_SHOW_IFRAME';\nconst PDF_OUTPUT = 'PDF_OUTPUT';\n\n\nlet initialStickers: Array<stickerType> = [\n    {\n        content: {\n            Foreign: \"Hello\",\n            Spelling: \"|həˈloʊ|\",\n            Native: \"Привет\"\n        },\n        id: 0,\n        isMouseOver: false,\n        isStudied: false\n    }\n];\n\nconst previewStickersEn = \"Hello friend this stickers with words to study foreign languages \" +\n    \"You can accumulate unknown words in google translate phrasebook after that import them to spreedshed \" +\n    \"in your google drive Now just signin under your google account and you will see all accumulated \" +\n    \"words as stickers This stickers you can print on paper and put on wall in room near with work desk for memorising\"\n\nconst previewStickersRus = \"Привет друг это карточки со словами для изучения иностранных языков \" +\n    \"Ты можешь накопить незнакомые слова в гугл переводчике словаре после этого импортировать их в таблицу \" +\n    \"в своем гугл драйве Теперь просто залогинься под своим гугл аккаунтом и ты будешь видеть все накопленные \" +\n    \"слова как карточки Эти карточки ты можешь распечатать на бумагу и наклеить на стену в комнате рядом с рабочим столом для запоминания\"\n\nlet getInitialiseStickers = () => {\n    var eng = previewStickersEn.split(\" \");\n    var rus = previewStickersRus.split(\" \");\n\n    var dynamicInitialStickers: Array<stickerType> = [];\n\n    for (let i = 0; i < eng.length; i++) {\n\n        var sticker: stickerType = {\n            content: {\n                Foreign: eng[i],\n                Spelling: \"\",\n                Native: rus[i]\n            },\n            id: i,\n            isMouseOver: false,\n            isStudied: false\n        };\n        dynamicInitialStickers.push(sticker);\n    }\n    return dynamicInitialStickers;\n}\n\nexport type stickerType = {\n    content: {\n        Foreign: String,\n        Spelling: String,\n        Native: String\n    },\n    id: number,\n    isMouseOver: boolean,\n    isStudied: boolean\n}\n\nexport type initialStateType = {\n    pdf: React.RefObject<unknown>,\n    stickers: Array<stickerType>,\n    isFetchingStickers : boolean,\n    stickersAreFetched: boolean,\n    isGeneratingPdf: boolean,\n    isShowIframe: boolean,\n    pdfOutput: any\n}\n\n\n\n\nvar initialState: initialStateType = {\n    pdf: React.createRef(),\n    stickers: getInitialiseStickers(),\n    isFetchingStickers: false,\n    stickersAreFetched: false,\n    isGeneratingPdf: false,\n    isShowIframe: false,\n    pdfOutput: \"\"\n}\n\n\n\nconst stickersReducer = (state: initialStateType = initialState, action: anyActionType) => {\n    switch (action.type) {\n        case UPDATE_PDF:\n            return { ...state, pdf: action.newPdf }\n        case UPDATE_STICKERS:\n            return { ...state, stickers: action.newStickers }\n        case RESET_STICKERS:\n            return { ...state, stickersAreFetched: false, stickers: getInitialiseStickers().reverse() }\n            break;\n        case MOUSE_OVER:\n            let copy = {\n                ...state, stickers: state.stickers.map(sticker => {\n                    if (action.stickerId === sticker.id) {\n                        return { ...sticker, isMouseOver: true }\n                    }\n                    return sticker;\n                })\n            }\n            return copy;\n        case MOUSE_LEAVE:\n            return {\n                ...state, stickers: state.stickers.map(sticker => {\n                    if (action.stickerId === sticker.id) {\n                        return { ...sticker, isMouseOver: false }\n                    }\n                    return sticker;\n                })\n            }\n        case STUDIED:\n            return {\n                ...state, stickers: state.stickers.map(sticker => {\n                    if (action.stickerId === sticker.id) {\n                        return { ...sticker, isStudied: action.isStudied }\n                    }\n                    return sticker;\n                })\n            }\n        case IS_FETCHING_STICKERS:\n            return {\n                ...state, isFetchingStickers: action.isFetchingStickers\n            }\n        case STICKERS_ARE_FETCHED:\n            return {\n                ...state, stickersAreFetched: action.stickersAreFetched\n            }\n        case IS_GENERATING_PDF:\n            return {\n                ...state, isGeneratingPdf: action.isGeneratingPdf\n            }\n        case IS_SHOW_IFRAME:\n            return {\n                ...state, isShowIframe: action.isShowIframe\n            }\n        case PDF_OUTPUT:\n            return {\n                ...state, pdfOutput: action.pdfOutput\n            }\n        default:\n            return state;\n    }\n}\n\nexport const getStickers = (spreadsheetId: number | null = null) => {\n    return (dispatch: any) => {\n        dispatch(updateIsFetchingStickers(true));\n        dispatch(updateStickersAreFetched(false));\n\n        if (spreadsheetId === null) {\n            listFiles((files: Array<any>) => {\n                var lastCreatedFile = getLastCreatedFile(files);\n                dispatch(updateSpreadsheetId(lastCreatedFile.id));\n                getValues(lastCreatedFile.id,\n                    (spreadsheetLines: Array<any>) => { getValuesSuccess(spreadsheetLines, dispatch) },\n                    (message: string) => { getValuesError(message, dispatch); });\n            });\n        }\n        else {\n            getValues(spreadsheetId,\n                (spreadsheetLines: Array<any>) => { getValuesSuccess(spreadsheetLines, dispatch) },\n                (message: string) => { getValuesError(message, dispatch); });\n        }\n    }\n}\n\n\nconst getValuesSuccess = (spreadsheetLines: Array<any>, dispatch: any) => {\n    dispatch(updateError(spreadsheetLines.length > 0 ? \"\" : \"No data found.\"));\n\n    var stickers = spreadsheetLines.map((lineCells, index) => {\n        return {\n            content: {\n                Foreign: lineCells[0],\n                Spelling: \"---\",\n                Native: lineCells[1]\n            },\n            id: index,\n            isMouseOver: false,\n            isStudied: false\n        }\n    });\n\n    dispatch(updateIsFetchingStickers(false));\n    dispatch(updateStickersAreFetched(true));\n    dispatch(updateStickers(stickers.reverse()));\n}\n\nconst getValuesError = (message: string, dispatch: any) => {\n    dispatch(updateError(\"Error\" + message));\n    dispatch(updateIsFetchingStickers(false));\n    dispatch(updateStickersAreFetched(false));\n}\n\nexport type updatePdfActionType = { type: typeof UPDATE_PDF, newPdf: any }\nexport type updateStickersActionType = { type: typeof UPDATE_STICKERS, newStickers: Array<stickerType> }\nexport type resetStickersActionType = { type: typeof RESET_STICKERS }\nexport type mouseOverStickerActionType = { type: typeof MOUSE_OVER, stickerId: number }\nexport type mouseLeaveStickerActionType = { type: typeof MOUSE_LEAVE, stickerId: number }\nexport type studiedStickerActionType = { type: typeof STUDIED, stickerId: number, isStudied: boolean }\nexport type updateIsFetchingStickersActionType = { type: typeof IS_FETCHING_STICKERS, isFetchingStickers: boolean }\nexport type updateStickersAreFetchedActionType = { type: typeof STICKERS_ARE_FETCHED, stickersAreFetched: boolean }\nexport type updateIsGeneratingPdfActionType = { type: typeof IS_GENERATING_PDF, isGeneratingPdf: boolean }\nexport type updateIsShowIframeActionType = { type: typeof IS_SHOW_IFRAME, isShowIframe: boolean }\nexport type updatePdfOutputActionType = { type: typeof PDF_OUTPUT, pdfOutput: any }\n\nexport type anyActionType = updatePdfActionType | updateStickersActionType | resetStickersActionType | mouseOverStickerActionType | mouseLeaveStickerActionType | \nstudiedStickerActionType | updateIsFetchingStickersActionType | updateStickersAreFetchedActionType | updateIsGeneratingPdfActionType | updateIsShowIframeActionType |\nupdatePdfOutputActionType;\n\nexport const updatePdf = (newPdf: any) : updatePdfActionType => ({ type: UPDATE_PDF, newPdf: newPdf });\nexport const updateStickers = (newStickers: Array<stickerType>): updateStickersActionType => ({ type: UPDATE_STICKERS, newStickers: newStickers });\nexport const resetStickers = () : resetStickersActionType => ({ type: RESET_STICKERS });\nexport const mouseOverSticker = (stickerId: number) : mouseOverStickerActionType => ({ type: MOUSE_OVER, stickerId: stickerId });\nexport const mouseLeaveSticker = (stickerId: number) : mouseLeaveStickerActionType => ({ type:  MOUSE_LEAVE, stickerId: stickerId });\nexport const studiedSticker = (info: any) : studiedStickerActionType => ({ type: STUDIED, stickerId: info.stickerId, isStudied: info.isStudied });\nexport const updateIsFetchingStickers = (isFetchingStickers: boolean) : updateIsFetchingStickersActionType => ({ type: IS_FETCHING_STICKERS, isFetchingStickers: isFetchingStickers });\nconst updateStickersAreFetched = (stickersAreFetched : boolean) : updateStickersAreFetchedActionType => ({ type: STICKERS_ARE_FETCHED, stickersAreFetched: stickersAreFetched });\nexport const updateIsGeneratingPdf = (isGeneratingPdf : boolean) : updateIsGeneratingPdfActionType => ({ type: IS_GENERATING_PDF, isGeneratingPdf: isGeneratingPdf });\nexport const updateIsShowIframe = (isShowIframe : boolean) : updateIsShowIframeActionType => ({ type: IS_SHOW_IFRAME, isShowIframe: isShowIframe });\nexport const updatePdfOutput = (pdfOutput: any) : updatePdfOutputActionType=> ({ type: PDF_OUTPUT, pdfOutput: pdfOutput });\n\nexport default stickersReducer;","export let getSpreadseetId = (state) => {\n    return state.spreadsheetPage.spreadseetId;\n}","import React from 'react';\nimport ReadSpreadsheat from './ReadSpreadsheet'\nimport { getLatestSpreadsheetId, updateSpreadsheetId } from '../redux/spreadsheet-reducer'\nimport { getStickers } from '../redux/stickers-reducer'\nimport { connect } from 'react-redux';\nimport { getPdfRef } from '../redux/stickers-selectors';\nimport { getSpreadseetId } from '../redux/spreadsheet-selectors';\n\nlet mapStateToProps = (state) => {\n    return {\n        pdf: getPdfRef(state),\n        spreadseetId: getSpreadseetId(state)\n    }\n}\n\nconst ReadSpreadsheetContainter = connect(mapStateToProps, { getStickers, getLatestSpreadsheetId, updateSpreadsheetId })(ReadSpreadsheat);\n\n\nexport default ReadSpreadsheetContainter;","import React, { Component } from 'react';\nimport ReadSpreadsheetContainter from './../ReadSpreadsheet/ReadSpreadsheetContainter'\nimport s from './Header.module.css'\n\nclass Header extends Component {\n    render() {\n        return (\n            <div className={s.header}>\n                <ReadSpreadsheetContainter/>\n            </div>\n        );\n    }\n}\n\nexport default Header;","const CLIENT_ID = \"722524747087-sgjsjequa1sv10c8m3g9fl6gtqoa39eg.apps.googleusercontent.com\";\nconst API_KEY = \"AIzaSyANRAmPJFTjvI2lxfJpq82rd4SHtpBdKY0\";\nconst DISCOVERY_DOCS = [\"https://sheets.googleapis.com/$discovery/rest?version=v4\", \"https://www.googleapis.com/discovery/v1/apis/drive/v3/rest\"];\nconst SCOPES = \"https://www.googleapis.com/auth/drive.metadata\";\n\nlet getInstance = () =>{\n    return window.gapi.auth2.getAuthInstance();\n} \n\nexport let initGAPI = async (observer) => {\n    await window.gapi.client.init({\n        apiKey: API_KEY,\n        clientId: CLIENT_ID,\n        discoveryDocs: DISCOVERY_DOCS,\n        scope: SCOPES\n    });\n}\n\n\nexport let getProfile = () => {\n    const googleUser = getInstance().currentUser.get();\n    const profile = googleUser.getBasicProfile();\n    return profile;\n}\n\n\nexport let listenAuth2 = (observer) => {\n    getInstance().isSignedIn.listen(observer);\n}\n\nexport let getIsSignedIn = () =>{\n   return window.gapi.auth2.getAuthInstance().isSignedIn.get();\n}\n\n\nexport let signInAuth2 = () => {\n    getInstance().signIn();\n}\n\nexport let signOutAuth2 = () => {\n    getInstance().signOut();\n}\n\nexport let loadAuth2 = (observer) => {\n    window.gapi.load('client:auth2', observer);\n}","import React, { Component } from 'react';\nimport s from './SocialUrl.module.css'\n\nconst SocialUrl = ({ url, icon }) => {\n  return (\n    <a href={url} target=\"_blank\">\n      <img src={icon} />\n    </a>\n  )\n}\n\n\nexport default SocialUrl;","import React, { Component } from 'react';\nimport s from './SignInWithGoogle.module.css';\nimport cs from './../Common.module.css';\nimport { initGAPI, getProfile, signInAuth2, loadAuth2, listenAuth2, getIsSignedIn } from './../API/GAPI';\nimport google from './../Assets/google.svg'\nimport signOutImg from './../Assets/sign-out.svg'\nimport SocialUrl from './../Social/SocialUrl'\nimport googlePlus from './../Assets/google-plus.svg'\n\n\n//todo: need to remove token.pickle\n\nclass SignInWithGoogle extends Component {\n\n    initClient = async () => {\n        try {\n            await initGAPI();\n            listenAuth2(this.updateSigninStatus);\n            this.updateSigninStatus(getIsSignedIn());\n            this.showError(\"\");\n\n        }\n        catch (error) {\n            this.showError(JSON.stringify(error, null, 2));\n        }\n    }\n\n\n    updateSigninStatus = (isSignedIn) => {\n        var profile;\n        if (isSignedIn) {\n            profile = getProfile();\n        }\n\n        this.props.updateProfile(profile);\n\n        this.props.updateIsSignedIn(isSignedIn);\n    }\n\n\n\n    async componentDidMount() {\n        loadAuth2(await this.initClient)\n    }\n\n    showError = (message) => {\n        this.props.updateError(message);\n    }\n\n    getButton() {\n        var signIn = (\n            <input type=\"image\" className={s.avatar} onClick={signInAuth2} src={googlePlus} />\n        );\n\n        var signOutBtn = <button className={cs.button} onClick={this.props.signOut}>Sign Out</button>;\n\n        return this.props.isSignedIn ? \"\" : signIn;\n    }\n\n    getUserInfo() {\n        var spredsheetLink = \"https://docs.google.com/spreadsheets/d/\" + this.props.spreadsheetId;\n        if (this.props.profile) {\n            return (\n                <div>\n                    {/* <label className=\"w3-text-white\">{this.props.profile.getName()}</label> */}\n                    <p align=\"center\">\n                        <SocialUrl url={spredsheetLink} icon={this.props.profile.getImageUrl()} />\n                    </p>\n                    <p align=\"center\">\n                        <input type=\"image\" className={s.avatar} onClick={this.props.signOut} src={signOutImg} />\n                    </p>\n                </div>\n            );\n        }\n        return '';\n    }\n\n    render() {\n        return (\n            <div className={s.main} align=\"center\">\n                {this.getUserInfo()}\n                <p>\n                    {this.getButton()}\n                </p>\n            </div>\n        );\n    }\n}\n\n\nexport default SignInWithGoogle;","import { signOutAuth2 } from \"../API/GAPI\"\nimport { resetStickers, updatePdfOutput } from \"./stickers-reducer\";\n\nconst UPDATE_IS_SIGNED_IN = 'UPDATE_IS_SIGNED_IN';\nconst UPDATE_PROFILE = 'UPDATE_PROFILE';\n\nvar initialState = {\n    isSignedIn: false,\n    profile: ''\n}\n\nconst signinReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case UPDATE_IS_SIGNED_IN:\n            return { ...state, isSignedIn: action.isSignedIn }\n        case UPDATE_PROFILE:\n            return { ...state, profile: action.profile }\n        default:\n            return state;\n    }\n}\n\nexport const signOut = () => {\n    return (dispatch) => {\n        signOutAuth2();\n        dispatch(updateIsSignedIn(false));\n        dispatch(resetStickers());\n        dispatch(updatePdfOutput(\"\"));\n    }\n}\n\nexport const updateIsSignedIn = (isSignedIn) => ({ type: UPDATE_IS_SIGNED_IN, isSignedIn: isSignedIn });\nexport const updateProfile = (profile) => ({ type: UPDATE_PROFILE, profile: profile });\n\nexport default signinReducer;","export let getProfile = (state) => {\n    return state.signInPage.profile;\n}\n\nexport let getIsSignedIn = (state) => {\n    return state.signInPage.isSignedIn;\n}","import React from 'react';\nimport SigninWithGoogle from './SignInWithGoogle'\nimport { updateIsSignedIn, updateProfile, signOut } from './../redux/signin-reducer'\nimport { updateError } from './../redux/error-reducer'\nimport { connect } from 'react-redux'\nimport { getProfile, getIsSignedIn } from '../redux/signin-selectors';\nimport { getSpreadseetId } from '../redux/spreadsheet-selectors';\n\nlet mapStateToProps = (state) => {\n    return {\n        profile: getProfile(state),\n        isSignedIn: getIsSignedIn(state),\n        spreadsheetId: getSpreadseetId(state)\n    }\n}\n\n\nconst SigninWithGoogleContainer = connect(mapStateToProps, { signOut, updateError, updateProfile, updateIsSignedIn })(SigninWithGoogle);\n\nexport default SigninWithGoogleContainer;\n\n","import React, { Component } from 'react';\nimport s from './ErrorBar.module.css';\n\n\nclass ErrorBar extends Component {\n\n    render() {\n        console.log(this.props.error)\n        return (<div></div>\n            // <div className={s.errorBar}>\n            //     <p align=\"center\">\n            //         {this.props.error}\n            //     </p>\n            // </div>\n        );\n    }\n}\n\nexport default ErrorBar;","export let getErrorSelector = (state) =>{\n    return state.errorPage.error;\n}","import React from 'react';\nimport ErrorBar from './ErrorBar'\nimport { connect } from 'react-redux'\nimport { getErrorSelector } from '../redux/error-selectors';\n\nlet mapStateToProps = (state) => {\n    return {\n        error: getErrorSelector(state)\n    }\n}\n\nconst ErrorBarContainer = connect(mapStateToProps, {})(ErrorBar);\n\nexport default ErrorBarContainer;","import React, { Component } from 'react';\nimport SigninWithGoogleContainer from '../SignInWithGoogle/SigninWitGoogleContainer';\nimport ErrorBarContainer from '../ErrorBar/ErrorBarContainer';\nimport SocialUrl from './../Social/SocialUrl'\nimport github from './../Assets/github.svg'\nimport youtube from './../Assets/youtube.svg'\nimport print from './../Assets/print.svg'\nimport translate from './../Assets/translate.svg'\nimport s from './Navbar.module.css';\nimport { htmlToPdf } from './../utils/htmlToPdf'\nimport spinner  from './../Assets/spinner.svg'\n\nconst pageHeightPixels = 98 * 8;\nconst pdfFileName = \"Stickers to print.pdf\";\nconst pageOrientation = \"landscape\";\n\nconst Navbar = ({ pdf, updateIsGeneratingPdf, updateIsShowIframe, updatePdfOutput, pdfOutput, isGeneratingPdf }) => {\n\n    let onClickPdf = async () => {\n\n        if (pdfOutput == \"\") {\n            updateIsGeneratingPdf(true);\n            var newPdfOutput = await htmlToPdf(pageHeightPixels, pageOrientation, pdf, pdfFileName);\n            updatePdfOutput(newPdfOutput);\n            updateIsGeneratingPdf(false);\n        }\n\n        updateIsShowIframe(true);\n\n    }\n\n    let getPrintButton = () => {\n        return isGeneratingPdf == false ? <input type=\"image\" onClick={onClickPdf} src={print} /> : <img src={spinner} />;\n    }\n\n    return (\n        <div className={s.navbar}>\n\n            <div className={s.main}>\n                <p align=\"center\">\n                    {getPrintButton()}\n                </p>\n            </div>\n            <div>\n                <p align=\"center\">\n                    <p>\n                        <SocialUrl url=\"https://translate.google.com/#en/ru/\" icon={translate} />\n                    </p>\n                    <p>\n                        <SocialUrl url=\"https://www.youtube.com/watch?v=C-FKXagcLRQ&list=PLQPXxMwGR_nkJyvzRnj8NGgHwgvpdipy4\" icon={youtube} />\n                    </p>\n                    <p>\n                        <SocialUrl url=\"https://github.com/fargutvest/WordsStickers\" icon={github} />\n                    </p>\n                </p>\n                <p>\n                    <ErrorBarContainer />\n                </p>\n                <SigninWithGoogleContainer />\n            </div>\n\n        </div >\n    );\n\n}\n\nexport default Navbar;","import React from 'react';\nimport Navbar from './Navbar'\nimport { connect } from 'react-redux';\nimport { getPdfRef, getPdfOutput, getIsGeneratingPdf } from '../redux/stickers-selectors';\nimport { updateIsGeneratingPdf, updateIsShowIframe, updatePdfOutput } from '../redux/stickers-reducer'\n\nlet mapStateToProps = (state) => {\n    return {\n        pdf: getPdfRef(state),\n        pdfOutput: getPdfOutput(state),\n        isGeneratingPdf: getIsGeneratingPdf(state)\n    }\n}\n\nconst NavbarContainter = connect(mapStateToProps, {updateIsGeneratingPdf, updateIsShowIframe, updatePdfOutput})(Navbar);\n\nexport default NavbarContainter;","import React, { Component } from 'react';\nimport s from './Sticker.module.css';\n\n\nconst Sticker = ({ onMouseOver, onMouseLeave, onStudied, sticker }) => {\n\n  let onMouseOverHandler = () => {\n    onMouseOver(sticker.id);\n  }\n\n  let onMouseLeaveHandler = () => {\n    onMouseLeave(sticker.id);\n  }\n\n  let onClickHandler = () => {\n    onStudied({ stickerId: sticker.id, isStudied: !sticker.isStudied })\n  }\n\n  var mouseOver = sticker.isMouseOver ? s.MouseOver : \"\";\n  var studied = sticker.isStudied ? s.Studied : \"\"\n\n  \n  return (\n    <div className={`${s.Sticker} ${mouseOver} ${studied}`} onMouseOver={onMouseOverHandler} onMouseLeave={onMouseLeaveHandler} onClick={onClickHandler}>\n      <div className={`${s.Foreign} ${s.Part}`}>{sticker.content.Foreign}</div>\n      {/* <div className={`${s.Spelling} ${s.Part}`}>{sticker.content.Spelling}</div> */}\n      <div className={`${s.Native} ${s.Part}`}>{sticker.content.Native}</div>\n    </div>\n  );\n\n}\n\nexport default Sticker;","import React, { Component } from 'react';\nimport s from './Stickers.module.css';\nimport Sticker from './Sticker/Sticker';\n\nconst pdfRef = React.createRef();\nconst countStickersInRow = 4;\n\nclass Stickers extends Component {\n\n  buildStickersPage() {\n    var stickers = this.props.stickers.reverse();\n\n    var stickersPage = [];\n    var stickersCounter = 0;\n    var stickersRow = [];\n\n    stickers.forEach(sticker => {\n      \n      stickersCounter++;\n      stickersRow.push(<Sticker sticker={sticker} onMouseOver={this.props.mouseOverSticker} onMouseLeave={this.props.mouseLeaveSticker}\n        onStudied={this.props.studiedSticker} />);\n\n      if (stickersRow.length == countStickersInRow || stickers.length - stickersCounter == 0) {\n        stickersPage.push(<div className={s.StickersRow}>{stickersRow}</div>);\n        stickersRow = [];\n      }\n    });\n\n    return stickersPage;\n  }\n\n  componentDidMount() {\n    this.props.updatePdf(pdfRef);\n  }\n\n  render() {\n    return (\n      <div className={s.main} >\n        <div ref = {pdfRef}>\n          {this.buildStickersPage()}\n        </div>\n      </div>\n    )\n  }\n}\n\n\n\n\nexport default Stickers;","import React, { Component } from 'react';\nimport Stickers from './Stickers'\nimport { updatePdf } from './../redux/stickers-reducer'\nimport { mouseOverSticker, mouseLeaveSticker, studiedSticker } from './../redux/stickers-reducer';\nimport { connect } from 'react-redux'\nimport Preloader from './../Components/Preloader/Preloader.js'\nimport { getStickers } from './../redux/stickers-reducer';\nimport { getStickersSelector, getIsFetchingStickers, getStickersAreFetched } from './../redux/stickers-selectors'\nimport { getIsSignedIn } from './../redux/signin-selectors'\n\n\nclass StickersContainer extends Component {\n\n    render() {\n        if (this.props.isSignedIn && this.props.stickersAreFetched == false && this.props.isFetchingStickers === false) {\n            this.props.getStickers();\n        }\n\n        return <Stickers {...this.props} />\n    }\n}\n\nlet mapStateToProps = (state) => {\n    return {\n        stickers: getStickersSelector(state),\n        isSignedIn: getIsSignedIn(state),\n        isFetchingStickers: getIsFetchingStickers(state),\n        stickersAreFetched : getStickersAreFetched(state)\n    }\n}\n\nexport default connect(mapStateToProps, {\n    updatePdf,\n    mouseOverSticker,\n    mouseLeaveSticker,\n    studiedSticker,\n    getStickers\n})(StickersContainer);\n","import React, { Component } from 'react';\nimport preloader from './../../Assets/preloader.svg'\nimport s from './Preloader.module.css'\n\nclass Preloader extends Component {\n  render() {\n    return (\n      <div className={s.preloader}>\n        <img src={preloader} />\n      </div>\n    )\n  }\n}\n\n\nexport default Preloader;","import React, { Component } from 'react';\nimport s from './PlaySticker.module.css';\n\n\nconst PlaySticker = ({ mouseOverSticker, mouseLeaveSticker, studiedSticker, sticker }) => {\n\n  let onMouseOverHandler = () => {\n    mouseOverSticker(sticker.id);\n  }\n\n  let onMouseLeaveHandler = () => {\n    mouseLeaveSticker(sticker.id);\n  }\n\n  let onClickHandler = () => {\n    studiedSticker({ stickerId: sticker.id, isStudied: !sticker.isStudied })\n  }\n\n  var mouseOver = sticker.isMouseOver ? s.MouseOver : \"\";\n  var studied = sticker.isStudied ? s.Studied : \"\"\n\n  \n  return (\n    <div className={`${s.Sticker} ${mouseOver} ${studied}`} onMouseOver={onMouseOverHandler} onMouseLeave={onMouseLeaveHandler} onClick={onClickHandler}>\n      <div className={`${s.Foreign} ${s.Part}`}>{sticker.content.Foreign}</div>\n      {/* <div className={`${s.Spelling} ${s.Part}`}>{sticker.content.Spelling}</div> */}\n      <div className={`${s.Native} ${s.Part}`}>{sticker.content.Native}</div>\n    </div>\n  );\n\n}\n\nexport default PlaySticker;","import React, { Component } from 'react';\nimport PlaySticker from './PlaySticker'\nimport { updatePdf } from './../../redux/stickers-reducer'\nimport { mouseOverSticker, mouseLeaveSticker, studiedSticker, getStickers } from './../../redux/stickers-reducer';\nimport { connect } from 'react-redux'\nimport Preloader from './../../Components/Preloader/Preloader.js'\nimport { getStickersSelector, getIsFetchingStickers, getStickersAreFetched } from './../../redux/stickers-selectors'\nimport { getIsSignedIn } from './../../redux/signin-selectors'\n\n\nclass PlayStickerContainer extends Component {\n\n    render() {\n          if (this.props.isSignedIn && this.props.stickersAreFetched == false && this.props.isFetchingStickers === false) {\n            this.props.getStickers();\n        }\n\n        var sticker = this.props.stickers[Math.floor(Math.random() * this.props.stickers.length)];\n\n        return <PlaySticker {...this.props} sticker={sticker} />\n    }\n}\n\nlet mapStateToProps = (state) => {\n    return {\n        stickers: getStickersSelector(state),\n        isSignedIn: getIsSignedIn(state),\n        isFetchingStickers: getIsFetchingStickers(state),\n        stickersAreFetched : getStickersAreFetched(state)\n    }\n}\n\nexport default connect(mapStateToProps, {\n    updatePdf,\n    mouseOverSticker,\n    mouseLeaveSticker,\n    studiedSticker,\n    getStickers\n})(PlayStickerContainer);\n","import React, { Component } from 'react';\nimport StickersContainer from '../Stickers/StickersContainer';\nimport PlayStickerContainer from '../Stickers/PlaySticker/PlayStickerContainer';\nimport s from './Content.module.css'\n\n\nclass Content extends Component {\n\n    render() {\n        return (\n            <div className={s.content}>\n                {window.innerWidth > 980 ? <StickersContainer /> : <PlayStickerContainer />}\n            </div>\n        );\n    }\n}\n\nexport default Content;","import React, { Component } from 'react';\nimport s from './Footer.module.css'\n\nclass Footer extends Component {\n\n    render() {\n        return (\n            <div className={s.footer}>\n                \n            </div>\n        );\n    }\n}\n\nexport default Footer;","import React, { Component } from 'react';\nimport preloader from './../../Assets/preloader.svg'\nimport s from './SplashScreen.module.css'\n\nclass SplashScreen extends Component {\n    render() {\n        return (\n            <div className={s.splashScreen}>\n                <img className={s.preloader} src={preloader} />\n            </div>\n        )\n    }\n}\n\n\nexport default SplashScreen;","import React, { Component } from 'react';\nimport s from './IFrame.module.css'\nimport exit from '../../Assets/exit.svg'\n\nconst IFrame = ({ content, updateIsShowIframe }) => {\n\n    let onClick = () => {\n        updateIsShowIframe(false);\n    }\n\n    return (\n        <div className={s.iframe}>\n            <input className={s.exitButton} type=\"image\" src={exit} onClick={onClick} />\n            <iframe src={content} />\n        </div>\n    );\n}\n\nexport default IFrame;","import React, { Component } from 'react';\nimport s from './App.module.css';\nimport Header from './Header/Header.js';\nimport NavbarContainter from './Navbar/NavbarContainer'\nimport Content from './Content/Content.jsx';\nimport Footer from './Footer/Footer.jsx';\nimport SplashScreen from './Components/SplashScreen/SplashScreen';\nimport IFrame from './Components/IFrame/IFrame';\n\nclass App extends Component {\n\n  render() {\n    return (\n      <div className={s.app_wrapper}>\n        {/* <Header /> */}\n         {this.props.isShowIframe ? <IFrame content = {this.props.pdfOutput} updateIsShowIframe = {this.props.updateIsShowIframe}/> : \"\" } \n         {this.props.isFetchingStickers || this.props.isGeneratingPdf ? <SplashScreen /> : \"\" }\n        <NavbarContainter />\n        <Content />\n        {/* <Footer /> */}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux'\nimport { getIsFetchingStickers, getIsGeneratingPdf, getIsShowIframe, getPdfOutput } from './redux/stickers-selectors'\nimport App from './App';\nimport { updateIsShowIframe } from './redux/stickers-reducer' \n\n\nclass AppContainer extends Component {\n\n    render() {\n        return (\n            <App {...this.props} />\n        )\n    }\n}\n\nlet mapStateToProps = (state) => {\n    return {\n        isFetchingStickers: getIsFetchingStickers(state),\n        isGeneratingPdf: getIsGeneratingPdf(state),\n        isShowIframe: getIsShowIframe(state),\n        pdfOutput: getPdfOutput(state)\n    }\n}\n\nexport default connect(mapStateToProps, {updateIsShowIframe})(AppContainer);\n","import { listFiles, cleanFiles, getLastCreatedFile } from './../API/GDriveAPI'\nconst UPDATE_FILES_LIST = 'UPDATE_FILES_LIST';\n\nvar initialState = {\n    phrasebookFilesTree: {\n        latestPhrasebookFile: '',\n        allPhrasebookFiles: []\n    }\n\n}\n\nconst gdriveReducer = (state = initialState, action) => {\n\n    switch (action.type) {\n        case UPDATE_FILES_LIST:\n            return { ...state, phrasebookFilesTree: { ...state.phrasebookFilesTree, allPhrasebookFiles: action.allPhrasebookFiles, latestPhrasebookFile: action.latestPhrasebookFile } }\n        default:\n            return state;\n    }\n}\n\nexport const getPhrasebookFiles = () => {\n    return (dispatch) => {\n        listFiles((files) => {\n            var latest = getLastCreatedFile(files);\n            dispatch(updatePhrasebookFiles(files, latest));\n        });\n    }\n}\n\nexport const cleanPhrasebookFiles = (filesToClean) => {\n    return (dispatch) => {\n        cleanFiles(filesToClean);\n        listFiles((files) => {\n            var latest = getLastCreatedFile(files);\n            dispatch(updatePhrasebookFiles(files, latest));\n        });\n    }\n}\n\nexport const updatePhrasebookFiles = (allPhrasebookFiles, latestPhrasebookFile) => ({ type: UPDATE_FILES_LIST, allPhrasebookFiles: allPhrasebookFiles, latestPhrasebookFile: latestPhrasebookFile });\n\nexport default gdriveReducer;","import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport errorReducer from \"./error-reducer\";\nimport gdriveReducer from \"./gdrive-reducer\";\nimport spreadsheetReducer from \"./spreadsheet-reducer\";\nimport stickersReducer from \"./stickers-reducer\";\nimport signinReducer from \"./signin-reducer\";\nimport thunkMiddleware from \"redux-thunk\";\nimport { reducer as formReducer } from 'redux-form'\n\n\nvar reducers = combineReducers({\n    errorPage: errorReducer,\n    spreadsheetPage: spreadsheetReducer,\n    stickersPage: stickersReducer,\n    filesListPage: gdriveReducer,\n    signInPage: signinReducer,\n    form: formReducer\n});\n\nvar store = createStore(reducers, applyMiddleware(thunkMiddleware));\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport AppContainer from './AppContainer';\nimport './index.css';\nimport store from './redux/store-redux.js';\nimport { HashRouter } from \"react-router-dom\";\nimport { Provider } from 'react-redux'\n\nlet rerender = () => {\n  ReactDOM.render((\n    <HashRouter>\n      <Provider store={store}>\n        <AppContainer />\n      </Provider>\n    </HashRouter>\n  ),\n    document.getElementById('root')\n  );\n}\n\nstore.subscribe(() => {\n  rerender();\n});\n\nwindow.store = store;\nrerender();\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Sticker\":\"Sticker_Sticker__1fdgD\",\"MouseOver\":\"Sticker_MouseOver__3vk8l\",\"Studied\":\"Sticker_Studied__2SVM7\",\"Part\":\"Sticker_Part__2MF4-\",\"Foreign\":\"Sticker_Foreign__2YGTc\",\"Spelling\":\"Sticker_Spelling__1iJng\",\"Native\":\"Sticker_Native__2KAao\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Sticker\":\"PlaySticker_Sticker__e8QeO\",\"Part\":\"PlaySticker_Part__o30Ph\",\"Foreign\":\"PlaySticker_Foreign__1WlRK\",\"Native\":\"PlaySticker_Native__104yg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Common_button__-rPdQ\",\"remove\":\"Common_remove__2dV9p\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bar\":\"ReadSpreadsheet_bar__PTix_\",\"floatRight\":\"ReadSpreadsheet_floatRight__ve8D0\",\"form\":\"ReadSpreadsheet_form__1-6q1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormControls_formControl__1V9rg\",\"error\":\"FormControls_error__2eEhE\"};","module.exports = __webpack_public_path__ + \"static/media/preloader.cc338b03.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"google_button\":\"SignInWithGoogle_google_button__1K8xa\",\"google_button_icon\":\"SignInWithGoogle_google_button_icon__2zPcA\",\"google_button_icon_plus\":\"SignInWithGoogle_google_button_icon_plus__3i0pb\",\"google_button_text\":\"SignInWithGoogle_google_button_text__7avQu\",\"avatar\":\"SignInWithGoogle_avatar__3Es-X\",\"main\":\"SignInWithGoogle_main__1Ji5D\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"Navbar_navbar__1tePV\",\"youtubelink\":\"Navbar_youtubelink__rggms\",\"main\":\"Navbar_main__1mGDk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Stickers_main__1jSFN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"splashScreen\":\"SplashScreen_splashScreen__jWh46\",\"preloader\":\"SplashScreen_preloader__3khFs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"iframe\":\"IFrame_iframe__3P0D8\",\"exitButton\":\"IFrame_exitButton__24o5X\"};"],"sourceRoot":""}