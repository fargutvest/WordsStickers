{"version":3,"sources":["App.module.css","Header/Header.module.css","Assets/sign-out.svg","Assets/google-plus.svg","Assets/github.svg","Assets/youtube.svg","Assets/print.svg","Assets/translate.svg","Assets/spinner.svg","Components/Preloader/Preloader.module.css","Content/Content.module.css","Footer/Footer.module.css","Assets/exit.svg","Assets/google.svg","ErrorBar/ErrorBar.module.css","redux/stickers-selectors.js","utils/htmlToPdf.js","utils/validators.js","hoc/withInitialValue.js","Components/FormsControls/FormsControls.js","ReadSpreadsheet/ReadPhrasebookByIdForm.js","ReadSpreadsheet/ReadSpreadsheet.js","API/GDriveAPI.js","redux/spreadsheet-reducer.js","API/GSheetsAPI.js","redux/error-reducer.js","redux/stickers-reducer.ts","redux/spreadsheet-selectors.js","ReadSpreadsheet/ReadSpreadsheetContainter.js","Header/Header.js","API/GAPI.js","Social/SocialUrl.js","SignInWithGoogle/SignInWithGoogle.js","redux/signin-reducer.js","redux/signin-selectors.js","SignInWithGoogle/SigninWitGoogleContainer.js","ErrorBar/ErrorBar.js","redux/error-selectors.js","ErrorBar/ErrorBarContainer.js","Navbar/Navbar.jsx","Navbar/NavbarContainer.js","Stickers/Sticker/Sticker.js","Stickers/Stickers.js","Stickers/StickersContainer.js","Components/Preloader/Preloader.js","Stickers/PlaySticker/PlaySticker.js","Stickers/PlaySticker/PlayStickerContainer.js","Content/Content.jsx","Footer/Footer.jsx","Components/SplashScreen/SplashScreen.js","Components/IFrame/IFrame.js","App.js","AppContainer.js","redux/gdrive-reducer.js","redux/store-redux.js","index.js","Stickers/Sticker/Sticker.module.css","Stickers/PlaySticker/PlaySticker.module.css","Common.module.css","ReadSpreadsheet/ReadSpreadsheet.module.css","Components/FormsControls/FormControls.module.css","Assets/preloader.svg","SignInWithGoogle/SignInWithGoogle.module.css","Navbar/Navbar.module.css","Stickers/Stickers.module.css","Components/SplashScreen/SplashScreen.module.css","Components/IFrame/IFrame.module.css"],"names":["module","exports","getIsFetchingStickers","state","stickersPage","isFetchingStickers","getStickersAreFetched","stickersAreFetched","getPdfRef","pdf","getStickersSelector","createSelector","stickers","filter","s","getIsGeneratingPdf","isGeneratingPdf","getIsShowIframe","isShowIframe","getPdfOutput","pdfOutput","htmlToPdf","pageHeightPixels","pageOrientation","pdfRef","fileName","a","input","current","numPages","scrollHeight","Math","floor","html2canvas","windowHeight","canvas","pagesCanvases","i","pageCanvas","cropPage","push","jsPDF","orientation","compress","length","addPage","imgData","toDataURL","addImage","output","pageHeight","offset","pageData","getContext","getImageData","width","document","createElement","pageContext","height","putImageData","Component","inputRef","React","createRef","Input","meta","label","props","hasError","touched","error","className","formControl","ref","value","undefined","required","lenght44","reduxForm","form","handleSubmit","onChangeSpreadsheetId","onSubmit","Field","name","validate","component","onChange","floatRight","cs","button","this","setInitialValue","ReadSpreadsheet","updateSpreadsheetId","getLatestSpreadsheetId","getStickers","spreadseetId","bar","values","spreadsheetId","e","target","id","onClick","orderByCreatedTime","arr","n","j","Date","parse","createdTime","temp","getLastCreatedFile","files","sorted","listFiles","success","window","gapi","client","drive","list","q","response","result","initialState","localStorage","getItem","newSpreadseetId","type","spreadsheetReducer","action","setItem","getValues","fail","sheets","spreadsheets","get","range","message","updateError","newError","errorReducer","previewStickersEn","previewStickersRus","getInitialiseStickers","eng","split","rus","dynamicInitialStickers","sticker","content","Foreign","Spelling","Native","isMouseOver","isStudied","dispatch","updateIsFetchingStickers","updateStickersAreFetched","lastCreatedFile","spreadsheetLines","getValuesSuccess","getValuesError","map","lineCells","index","updateStickers","reverse","updatePdf","newPdf","newStickers","mouseOverSticker","stickerId","mouseLeaveSticker","studiedSticker","info","updateIsShowIframe","updatePdfOutput","stickersReducer","copy","getSpreadseetId","spreadsheetPage","ReadSpreadsheetContainter","connect","ReadSpreadsheat","DISCOVERY_DOCS","getInstance","auth2","getAuthInstance","initGAPI","observer","init","apiKey","clientId","discoveryDocs","scope","getProfile","currentUser","getBasicProfile","listenAuth2","isSignedIn","listen","getIsSignedIn","signInAuth2","signIn","loadAuth2","load","SocialUrl","url","icon","href","src","SignInWithGoogle","initClient","updateSigninStatus","showError","JSON","stringify","profile","updateProfile","updateIsSignedIn","avatar","googlePlus","signOut","spredsheetLink","align","getImageUrl","signOutImg","main","getUserInfo","getButton","signinReducer","signInPage","SigninWithGoogleContainer","SigninWithGoogle","ErrorBar","console","log","getErrorSelector","errorPage","ErrorBarContainer","Navbar","updateIsGeneratingPdf","onClickPdf","newPdfOutput","navbar","print","spinner","translate","youtube","github","NavbarContainter","Sticker","onMouseOver","onMouseLeave","onStudied","mouseOver","MouseOver","studied","Studied","Part","Stickers","stickersCounter","stickersRow","forEach","StickersRow","buildStickersPage","StickersContainer","PlaySticker","PlayStickerContainer","random","Content","innerWidth","SplashScreen","splashScreen","preloader","IFrame","iframe","exitButton","exit","App","app_wrapper","AppContainer","phrasebookFilesTree","latestPhrasebookFile","allPhrasebookFiles","gdriveReducer","reducers","combineReducers","filesListPage","formReducer","store","createStore","applyMiddleware","thunkMiddleware","rerender","ReactDOM","render","getElementById","subscribe"],"mappings":"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","file":"static/js/main.4c1a8183.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"app_wrapper\":\"App_app_wrapper__2HuHo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__2k-qd\"};","module.exports = __webpack_public_path__ + \"static/media/sign-out.cc0d8a76.svg\";","module.exports = __webpack_public_path__ + \"static/media/google-plus.2159790d.svg\";","module.exports = __webpack_public_path__ + \"static/media/github.aa3642d4.svg\";","module.exports = __webpack_public_path__ + \"static/media/youtube.87146816.svg\";","module.exports = __webpack_public_path__ + \"static/media/print.c84ce011.svg\";","module.exports = __webpack_public_path__ + \"static/media/translate.e9b8835b.svg\";","module.exports = __webpack_public_path__ + \"static/media/spinner.85854f5e.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloader\":\"Preloader_preloader__1aFwU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Content_content__3hF6M\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__3sqrt\"};","module.exports = __webpack_public_path__ + \"static/media/exit.b8196adb.svg\";","module.exports = __webpack_public_path__ + \"static/media/google.4775cb59.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"errorBar\":\"ErrorBar_errorBar__1Uvqw\"};","import {createSelector} from \"reselect\";\r\n\r\nlet getStickers = (state) =>{\r\n    return state.stickersPage.stickers;\r\n}\r\n\r\nexport let getIsFetchingStickers = (state) =>{\r\n    return state.stickersPage.isFetchingStickers;\r\n}\r\n\r\nexport let getStickersAreFetched = (state) =>{\r\n    return state.stickersPage.stickersAreFetched;\r\n}\r\n\r\nexport let getPdfRef = (state) =>{\r\n    return state.stickersPage.pdf;\r\n}\r\n\r\nexport const getStickersSelector = createSelector(getStickers,\r\n    (stickers) => {\r\n    return stickers.filter(s => true);\r\n})\r\n\r\nexport let getIsGeneratingPdf = (state) =>{\r\n    return state.stickersPage.isGeneratingPdf;\r\n}\r\n\r\nexport let getIsShowIframe = (state) =>{\r\n    return state.stickersPage.isShowIframe;\r\n}\r\n\r\nexport let getPdfOutput = (state) =>{\r\n    return state.stickersPage.pdfOutput;\r\n}","import html2canvas from 'html2canvas';\r\nimport jsPDF from 'jspdf';\r\n\r\n\r\nexport let htmlToPdf = async (pageHeightPixels, pageOrientation, pdfRef, fileName) => {\r\n    var input = pdfRef.current;\r\n    const numPages = input.scrollHeight <= pageHeightPixels ? 1 : Math.floor(input.scrollHeight / pageHeightPixels) + 1;\r\n\r\n    const canvas = await html2canvas(input, { windowHeight: input.scrollHeight });\r\n\r\n    var pagesCanvases = [];\r\n\r\n    for (var i = 0; i < numPages; i++) {\r\n        var pageCanvas = cropPage(canvas, pageHeightPixels, pageHeightPixels * i);\r\n        pagesCanvases.push(pageCanvas)\r\n    }\r\n\r\n    let pdf = new jsPDF({\r\n        orientation: pageOrientation,\r\n        compress: true\r\n    });\r\n\r\n    for (var i = 0; i < pagesCanvases.length; i++) {\r\n        var pageCanvas = pagesCanvases[i];\r\n        if (i > 0) {\r\n            pdf.addPage();\r\n        }\r\n\r\n        const imgData = pageCanvas.toDataURL('image/png');\r\n        pdf.addImage(imgData, 'PNG', 0, 0);\r\n    }\r\n\r\n    return pdf.output('datauristring');\r\n}\r\n\r\nfunction cropPage(canvas, pageHeight, offset) {\r\n    var context = canvas.getContext(\"2d\");\r\n    var pageData = context.getImageData(0, offset, canvas.width, pageHeight);\r\n\r\n    var pageCanvas = document.createElement(\"canvas\");\r\n    var pageContext = pageCanvas.getContext(\"2d\");\r\n\r\n    pageCanvas.width = canvas.width;\r\n    pageCanvas.height = pageHeight;\r\n    pageContext.putImageData(pageData, 0, 0);\r\n\r\n    return pageCanvas;\r\n}\r\n","export const required = value => {\r\n    if (value) return undefined;\r\n\r\n    return 'Field is required';\r\n}\r\n\r\nexport const lenghtCreator = (length) => (value) => {\r\n    if (value && value.length > length) return `Length more than ${length} symbols`;\r\n    if (value && value.length < length) return `Length less than ${length} symbols`;\r\n\r\n    return undefined\r\n}\r\n","import React from 'react';\r\n\r\nexport const withInitialValue = (Component) => {\r\n\r\n    return class WithInitialValue extends React.Component {\r\n\r\n        componentDidUpdate(){\r\n            this.props.setInitialValue();\r\n        }\r\n\r\n        render() {\r\n            \r\n            return (\r\n                <Component {...this.props} />\r\n            )\r\n        }\r\n    }\r\n}\r\n","import React from 'react';\r\nimport s from './FormControls.module.css'\r\n\r\nexport const inputRef = React.createRef();\r\n\r\nexport const Input = ({ input, meta, label, ...props }) => {\r\n    const hasError = meta.touched && meta.error;\r\n    return (\r\n        <div>\r\n            {label ? <label className=\"w3-text-white\"><b>{label}</b></label> : \"\"}\r\n            {hasError ? <span className={`${s.formControl} ${s.error}`}>{meta.error}</span> : \"\"}\r\n            <input className={`w3-input w3-border ${s.formControl} ${hasError ? s.error : \"\"}`} ref={inputRef} {...input} value={undefined} {...props} />\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport { Field, reduxForm } from 'redux-form'\r\nimport { required, lenghtCreator } from './../utils/validators.js'\r\nimport { Input } from './../Components/FormsControls/FormsControls.js'\r\nimport { withInitialValue } from './../hoc/withInitialValue'\r\nimport s from './ReadSpreadsheet.module.css'\r\nimport cs from './../Common.module.css'\r\n\r\nconst lenght44 = lenghtCreator(44);\r\n\r\nconst ReadPhrasebookByIdForm = ({ handleSubmit, onChangeSpreadsheetId }) => {\r\n\r\n    return <form onSubmit={handleSubmit}>\r\n        <div className={s.form}>\r\n            <Field name=\"spreadsheetId\" label=\"Phrasebook ID: \" validate={[required, lenght44]} component={Input} onChange={onChangeSpreadsheetId} />\r\n            <div className={s.floatRight}>\r\n                <button className={cs.button} >Read specified phrasebook</button>\r\n            </div>\r\n        </div>\r\n    </form>\r\n}\r\n\r\n\r\nexport default reduxForm({ form: \"ReadPhrasebookById\" })(withInitialValue(ReadPhrasebookByIdForm));","import React, { Component } from 'react';\r\nimport s from './ReadSpreadsheet.module.css'\r\nimport cs from './../Common.module.css'\r\nimport { htmlToPdf } from './../utils/htmlToPdf'\r\nimport { inputRef } from './../Components/FormsControls/FormsControls.js'\r\nimport ReadPhrasebookByIdFormRedux from './ReadPhrasebookByIdForm'\r\n\r\nconst pageHeightPixels = 750;\r\nconst pdfFileName = \"Stickers to print.pdf\";\r\nconst pageOrientation = \"landscape\";\r\n\r\n\r\nconst ReadSpreadsheet = ({ updateSpreadsheetId, getLatestSpreadsheetId, getStickers, spreadseetId, pdf }) => {\r\n\r\n  let onChangeSpreadsheetId = (e) => {\r\n    updateSpreadsheetId(e.target.value);\r\n  }\r\n\r\n  let handleGetNewestSpreadsheetIdClick = () => {\r\n    getLatestSpreadsheetId();\r\n  }\r\n\r\n  let handleOnSubmit = (values) => {\r\n    getStickers(values.spreadsheetId);\r\n  }\r\n\r\n\r\n  let onClickPdf = () => {\r\n    htmlToPdf(pageHeightPixels, pageOrientation, pdf, pdfFileName);\r\n  }\r\n\r\n  let setInitialValue = () => {\r\n    if (spreadseetId) {\r\n      inputRef.current.value = spreadseetId;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className={s.bar}>\r\n      <ReadPhrasebookByIdFormRedux onSubmit={handleOnSubmit} setInitialValue={setInitialValue} onChangeSpreadsheetId={onChangeSpreadsheetId} />\r\n      <button id=\"read_spreadsheet\" className={cs.button} onClick={handleGetNewestSpreadsheetIdClick}>Get newest phrasebook ID</button>\r\n      <button id=\"pdf\" className={cs.button} onClick={onClickPdf}>Dowdload stickers in pdf</button>\r\n    </div>\r\n  );\r\n\r\n}\r\n\r\nexport default ReadSpreadsheet;","const rus = \"Сохраненные переводы\";\r\nconst eng = \"Saved translations\";\r\n\r\nlet orderByCreatedTime = (arr) => {\r\n    let n = arr.length;\r\n    for (var i = 0; i < n - 1; i++) {\r\n        for (var j = 0; j < n - i - 1; j++) {\r\n            if ((Date.parse(arr[j].createdTime) > Date.parse(arr[j + 1].createdTime))) {\r\n                let temp = arr[j];\r\n                arr[j] = arr[j + 1];\r\n                arr[j + 1] = temp;\r\n            }\r\n        }\r\n    }\r\n    return arr;\r\n}\r\n\r\nexport let getLastCreatedFile = (files) => {\r\n    var sorted = orderByCreatedTime(files);\r\n    return sorted[sorted.length - 1];\r\n}\r\n\r\nexport let listFiles = async (success) => {\r\n    const response = await window.gapi.client.drive.files.list({\r\n        'pageSize': 100,\r\n        q: \"mimeType='application/vnd.google-apps.spreadsheet'\",\r\n        q: `name='${eng}' or name='${rus}'`,\r\n        'fields': \"nextPageToken, files(id, name, createdTime, modifiedTime)\"\r\n    });\r\n    success(response.result.files);\r\n}\r\n\r\n\r\nexport let cleanFiles = (filesList) => {\r\n    var sorted = orderByCreatedTime(filesList);\r\n\r\n    for (var i = 0; i < sorted.length - 1; i++) {\r\n        var request = window.gapi.client.drive.files.delete({\r\n            'fileId': sorted[i].id\r\n        });\r\n        request.execute(function (resp) {\r\n            console.log(resp);\r\n        });\r\n    }\r\n}\r\n","import { listFiles, getLastCreatedFile } from '../API/GDriveAPI'\r\n\r\nexport const UPDATE_SPREADSHEET_ID = 'UPDATE_SPREADSHEET_ID';\r\n\r\nvar initialState = {\r\n    spreadseetId: localStorage.getItem(UPDATE_SPREADSHEET_ID)\r\n}\r\n\r\nconst spreadsheetReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case UPDATE_SPREADSHEET_ID:\r\n            localStorage.setItem(UPDATE_SPREADSHEET_ID, action.newSpreadseetId);\r\n            return { ...state, spreadseetId: action.newSpreadseetId }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const getLatestSpreadsheetId = () => {\r\n    return (dispatch) => {\r\n        listFiles((files) => {\r\n            var lastCreatedFile = getLastCreatedFile(files);\r\n            dispatch(updateSpreadsheetId(lastCreatedFile.id));\r\n        });\r\n    }\r\n}\r\n\r\nexport const updateSpreadsheetId = (newSpreadseetId) => ({ type: UPDATE_SPREADSHEET_ID, newSpreadseetId: newSpreadseetId });\r\n\r\n\r\nexport default spreadsheetReducer;","const RANGE = \"C:D\";\r\n\r\nexport let getValues = async (spreadsheetId, success, fail) => {\r\n    const response = await window.gapi.client.sheets.spreadsheets.values.get({\r\n        spreadsheetId: spreadsheetId,\r\n        range: RANGE,\r\n    });\r\n\r\n    if (response.result.error) {\r\n        fail(response.result.error.message);\r\n    }\r\n    else {\r\n        success(response.result.values);\r\n    }\r\n}","const UPDATE_ERROR = 'UPDATE_ERROR';\r\n\r\nvar initialState = {\r\n    error: \"\"\r\n}\r\n\r\nconst errorReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case UPDATE_ERROR:\r\n            return { ...state, error: action.newError }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const updateError = (newError) => ({ type: UPDATE_ERROR, newError: newError });\r\n\r\nexport default errorReducer;","import React from 'react';\r\nimport { getValues } from '../API/GSheetsAPI'\r\nimport { listFiles, getLastCreatedFile } from '../API/GDriveAPI'\r\nimport { updateError } from './error-reducer';\r\nimport { updateSpreadsheetId } from './spreadsheet-reducer'\r\nimport { red } from 'color-name';\r\n\r\nconst UPDATE_PDF = 'UPDATE_PDF';\r\nconst UPDATE_STICKERS = 'UPDATE_STICKERS';\r\nconst RESET_STICKERS = 'RESET_STICKERS';\r\nconst MOUSE_OVER = 'MOUSE_OVER';\r\nconst MOUSE_LEAVE = 'MOUSE_LEAVE';\r\nconst STUDIED = 'STUDIED';\r\nconst IS_FETCHING_STICKERS = 'IS_FETCHING_STICKERS';\r\nconst STICKERS_ARE_FETCHED = 'STICKERS_ARE_FETCHED';\r\nconst IS_GENERATING_PDF = 'IS_GENERATING_PDF';\r\nconst IS_SHOW_IFRAME = 'IS_SHOW_IFRAME';\r\nconst PDF_OUTPUT = 'PDF_OUTPUT';\r\n\r\n\r\nlet initialStickers: Array<stickerType> = [\r\n    {\r\n        content: {\r\n            Foreign: \"Hello\",\r\n            Spelling: \"|həˈloʊ|\",\r\n            Native: \"Привет\"\r\n        },\r\n        id: 0,\r\n        isMouseOver: false,\r\n        isStudied: false\r\n    }\r\n];\r\n\r\nconst previewStickersEn = \"Hello friend this stickers with words to study foreign languages \" +\r\n    \"You can accumulate unknown words in google translate phrasebook after that import them to spreedshed \" +\r\n    \"in your google drive Now just signin under your google account and you will see all accumulated \" +\r\n    \"words as stickers This stickers you can print on paper and put on wall in room near with work desk for memorising\"\r\n\r\nconst previewStickersRus = \"Привет друг это карточки со словами для изучения иностранных языков \" +\r\n    \"Ты можешь накопить незнакомые слова в гугл переводчике словаре после этого импортировать их в таблицу \" +\r\n    \"в своем гугл драйве Теперь просто залогинься под своим гугл аккаунтом и ты будешь видеть все накопленные \" +\r\n    \"слова как карточки Эти карточки ты можешь распечатать на бумагу и наклеить на стену в комнате рядом с рабочим столом для запоминания\"\r\n\r\nlet getInitialiseStickers = () => {\r\n    var eng = previewStickersEn.split(\" \");\r\n    var rus = previewStickersRus.split(\" \");\r\n\r\n    var dynamicInitialStickers: Array<stickerType> = [];\r\n\r\n    for (let i = 0; i < eng.length; i++) {\r\n\r\n        var sticker: stickerType = {\r\n            content: {\r\n                Foreign: eng[i],\r\n                Spelling: \"\",\r\n                Native: rus[i]\r\n            },\r\n            id: i,\r\n            isMouseOver: false,\r\n            isStudied: false\r\n        };\r\n        dynamicInitialStickers.push(sticker);\r\n    }\r\n    return dynamicInitialStickers;\r\n}\r\n\r\nexport type stickerType = {\r\n    content: {\r\n        Foreign: String,\r\n        Spelling: String,\r\n        Native: String\r\n    },\r\n    id: number,\r\n    isMouseOver: boolean,\r\n    isStudied: boolean\r\n}\r\n\r\nexport type initialStateType = {\r\n    pdf: React.RefObject<unknown>,\r\n    stickers: Array<stickerType>,\r\n    isFetchingStickers : boolean,\r\n    stickersAreFetched: boolean,\r\n    isGeneratingPdf: boolean,\r\n    isShowIframe: boolean,\r\n    pdfOutput: any\r\n}\r\n\r\n\r\n\r\n\r\nvar initialState: initialStateType = {\r\n    pdf: React.createRef(),\r\n    stickers: getInitialiseStickers(),\r\n    isFetchingStickers: false,\r\n    stickersAreFetched: false,\r\n    isGeneratingPdf: false,\r\n    isShowIframe: false,\r\n    pdfOutput: \"\"\r\n}\r\n\r\n\r\n\r\nconst stickersReducer = (state: initialStateType = initialState, action: anyActionType) => {\r\n    switch (action.type) {\r\n        case UPDATE_PDF:\r\n            return { ...state, pdf: action.newPdf }\r\n        case UPDATE_STICKERS:\r\n            return { ...state, stickers: action.newStickers }\r\n        case RESET_STICKERS:\r\n            return { ...state, stickersAreFetched: false, stickers: getInitialiseStickers() }\r\n            break;\r\n        case MOUSE_OVER:\r\n            let copy = {\r\n                ...state, stickers: state.stickers.map(sticker => {\r\n                    if (action.stickerId === sticker.id) {\r\n                        return { ...sticker, isMouseOver: true }\r\n                    }\r\n                    return sticker;\r\n                })\r\n            }\r\n            return copy;\r\n        case MOUSE_LEAVE:\r\n            return {\r\n                ...state, stickers: state.stickers.map(sticker => {\r\n                    if (action.stickerId === sticker.id) {\r\n                        return { ...sticker, isMouseOver: false }\r\n                    }\r\n                    return sticker;\r\n                })\r\n            }\r\n        case STUDIED:\r\n            return {\r\n                ...state, stickers: state.stickers.map(sticker => {\r\n                    if (action.stickerId === sticker.id) {\r\n                        return { ...sticker, isStudied: action.isStudied }\r\n                    }\r\n                    return sticker;\r\n                })\r\n            }\r\n        case IS_FETCHING_STICKERS:\r\n            return {\r\n                ...state, isFetchingStickers: action.isFetchingStickers\r\n            }\r\n        case STICKERS_ARE_FETCHED:\r\n            return {\r\n                ...state, stickersAreFetched: action.stickersAreFetched\r\n            }\r\n        case IS_GENERATING_PDF:\r\n            return {\r\n                ...state, isGeneratingPdf: action.isGeneratingPdf\r\n            }\r\n        case IS_SHOW_IFRAME:\r\n            return {\r\n                ...state, isShowIframe: action.isShowIframe\r\n            }\r\n        case PDF_OUTPUT:\r\n            return {\r\n                ...state, pdfOutput: action.pdfOutput\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const getStickers = (spreadsheetId: number | null = null) => {\r\n    return (dispatch: any) => {\r\n        dispatch(updateIsFetchingStickers(true));\r\n        dispatch(updateStickersAreFetched(false));\r\n\r\n        if (spreadsheetId === null) {\r\n            listFiles((files: Array<any>) => {\r\n                var lastCreatedFile = getLastCreatedFile(files);\r\n                dispatch(updateSpreadsheetId(lastCreatedFile.id));\r\n                getValues(lastCreatedFile.id,\r\n                    (spreadsheetLines: Array<any>) => { getValuesSuccess(spreadsheetLines, dispatch) },\r\n                    (message: string) => { getValuesError(message, dispatch); });\r\n            });\r\n        }\r\n        else {\r\n            getValues(spreadsheetId,\r\n                (spreadsheetLines: Array<any>) => { getValuesSuccess(spreadsheetLines, dispatch) },\r\n                (message: string) => { getValuesError(message, dispatch); });\r\n        }\r\n    }\r\n}\r\n\r\n\r\nconst getValuesSuccess = (spreadsheetLines: Array<any>, dispatch: any) => {\r\n    dispatch(updateError(spreadsheetLines.length > 0 ? \"\" : \"No data found.\"));\r\n\r\n    var stickers = spreadsheetLines.map((lineCells, index) => {\r\n        return {\r\n            content: {\r\n                Foreign: lineCells[0],\r\n                Spelling: \"---\",\r\n                Native: lineCells[1]\r\n            },\r\n            id: index,\r\n            isMouseOver: false,\r\n            isStudied: false\r\n        }\r\n    });\r\n\r\n    dispatch(updateIsFetchingStickers(false));\r\n    dispatch(updateStickersAreFetched(true));\r\n    dispatch(updateStickers(stickers.reverse()));\r\n}\r\n\r\nconst getValuesError = (message: string, dispatch: any) => {\r\n    dispatch(updateError(\"Error\" + message));\r\n    dispatch(updateIsFetchingStickers(false));\r\n    dispatch(updateStickersAreFetched(false));\r\n}\r\n\r\nexport type updatePdfActionType = { type: typeof UPDATE_PDF, newPdf: any }\r\nexport type updateStickersActionType = { type: typeof UPDATE_STICKERS, newStickers: Array<stickerType> }\r\nexport type resetStickersActionType = { type: typeof RESET_STICKERS }\r\nexport type mouseOverStickerActionType = { type: typeof MOUSE_OVER, stickerId: number }\r\nexport type mouseLeaveStickerActionType = { type: typeof MOUSE_LEAVE, stickerId: number }\r\nexport type studiedStickerActionType = { type: typeof STUDIED, stickerId: number, isStudied: boolean }\r\nexport type updateIsFetchingStickersActionType = { type: typeof IS_FETCHING_STICKERS, isFetchingStickers: boolean }\r\nexport type updateStickersAreFetchedActionType = { type: typeof STICKERS_ARE_FETCHED, stickersAreFetched: boolean }\r\nexport type updateIsGeneratingPdfActionType = { type: typeof IS_GENERATING_PDF, isGeneratingPdf: boolean }\r\nexport type updateIsShowIframeActionType = { type: typeof IS_SHOW_IFRAME, isShowIframe: boolean }\r\nexport type updatePdfOutputActionType = { type: typeof PDF_OUTPUT, pdfOutput: any }\r\n\r\nexport type anyActionType = updatePdfActionType | updateStickersActionType | resetStickersActionType | mouseOverStickerActionType | mouseLeaveStickerActionType | \r\nstudiedStickerActionType | updateIsFetchingStickersActionType | updateStickersAreFetchedActionType | updateIsGeneratingPdfActionType | updateIsShowIframeActionType |\r\nupdatePdfOutputActionType;\r\n\r\nexport const updatePdf = (newPdf: any) : updatePdfActionType => ({ type: UPDATE_PDF, newPdf: newPdf });\r\nexport const updateStickers = (newStickers: Array<stickerType>): updateStickersActionType => ({ type: UPDATE_STICKERS, newStickers: newStickers });\r\nexport const resetStickers = () : resetStickersActionType => ({ type: RESET_STICKERS });\r\nexport const mouseOverSticker = (stickerId: number) : mouseOverStickerActionType => ({ type: MOUSE_OVER, stickerId: stickerId });\r\nexport const mouseLeaveSticker = (stickerId: number) : mouseLeaveStickerActionType => ({ type:  MOUSE_LEAVE, stickerId: stickerId });\r\nexport const studiedSticker = (info: any) : studiedStickerActionType => ({ type: STUDIED, stickerId: info.stickerId, isStudied: info.isStudied });\r\nexport const updateIsFetchingStickers = (isFetchingStickers: boolean) : updateIsFetchingStickersActionType => ({ type: IS_FETCHING_STICKERS, isFetchingStickers: isFetchingStickers });\r\nconst updateStickersAreFetched = (stickersAreFetched : boolean) : updateStickersAreFetchedActionType => ({ type: STICKERS_ARE_FETCHED, stickersAreFetched: stickersAreFetched });\r\nexport const updateIsGeneratingPdf = (isGeneratingPdf : boolean) : updateIsGeneratingPdfActionType => ({ type: IS_GENERATING_PDF, isGeneratingPdf: isGeneratingPdf });\r\nexport const updateIsShowIframe = (isShowIframe : boolean) : updateIsShowIframeActionType => ({ type: IS_SHOW_IFRAME, isShowIframe: isShowIframe });\r\nexport const updatePdfOutput = (pdfOutput: any) : updatePdfOutputActionType=> ({ type: PDF_OUTPUT, pdfOutput: pdfOutput });\r\n\r\nexport default stickersReducer;","export let getSpreadseetId = (state) => {\r\n    return state.spreadsheetPage.spreadseetId;\r\n}","import React from 'react';\r\nimport ReadSpreadsheat from './ReadSpreadsheet'\r\nimport { getLatestSpreadsheetId, updateSpreadsheetId } from '../redux/spreadsheet-reducer'\r\nimport { getStickers } from '../redux/stickers-reducer'\r\nimport { connect } from 'react-redux';\r\nimport { getPdfRef } from '../redux/stickers-selectors';\r\nimport { getSpreadseetId } from '../redux/spreadsheet-selectors';\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        pdf: getPdfRef(state),\r\n        spreadseetId: getSpreadseetId(state)\r\n    }\r\n}\r\n\r\nconst ReadSpreadsheetContainter = connect(mapStateToProps, { getStickers, getLatestSpreadsheetId, updateSpreadsheetId })(ReadSpreadsheat);\r\n\r\n\r\nexport default ReadSpreadsheetContainter;","import React, { Component } from 'react';\r\nimport ReadSpreadsheetContainter from './../ReadSpreadsheet/ReadSpreadsheetContainter'\r\nimport s from './Header.module.css'\r\n\r\nclass Header extends Component {\r\n    render() {\r\n        return (\r\n            <div className={s.header}>\r\n                <ReadSpreadsheetContainter/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;","const CLIENT_ID = \"722524747087-sgjsjequa1sv10c8m3g9fl6gtqoa39eg.apps.googleusercontent.com\";\r\nconst API_KEY = \"AIzaSyANRAmPJFTjvI2lxfJpq82rd4SHtpBdKY0\";\r\nconst DISCOVERY_DOCS = [\"https://sheets.googleapis.com/$discovery/rest?version=v4\", \"https://www.googleapis.com/discovery/v1/apis/drive/v3/rest\"];\r\nconst SCOPES = \"https://www.googleapis.com/auth/drive.metadata\";\r\n\r\nlet getInstance = () =>{\r\n    return window.gapi.auth2.getAuthInstance();\r\n} \r\n\r\nexport let initGAPI = async (observer) => {\r\n    await window.gapi.client.init({\r\n        apiKey: API_KEY,\r\n        clientId: CLIENT_ID,\r\n        discoveryDocs: DISCOVERY_DOCS,\r\n        scope: SCOPES\r\n    });\r\n}\r\n\r\n\r\nexport let getProfile = () => {\r\n    const googleUser = getInstance().currentUser.get();\r\n    const profile = googleUser.getBasicProfile();\r\n    return profile;\r\n}\r\n\r\n\r\nexport let listenAuth2 = (observer) => {\r\n    getInstance().isSignedIn.listen(observer);\r\n}\r\n\r\nexport let getIsSignedIn = () =>{\r\n   return window.gapi.auth2.getAuthInstance().isSignedIn.get();\r\n}\r\n\r\n\r\nexport let signInAuth2 = () => {\r\n    getInstance().signIn();\r\n}\r\n\r\nexport let signOutAuth2 = () => {\r\n    getInstance().signOut();\r\n}\r\n\r\nexport let loadAuth2 = (observer) => {\r\n    window.gapi.load('client:auth2', observer);\r\n}","import React, { Component } from 'react';\r\nimport s from './SocialUrl.module.css'\r\n\r\nconst SocialUrl = ({ url, icon }) => {\r\n  return (\r\n    <a href={url} target=\"_blank\">\r\n      <img src={icon} />\r\n    </a>\r\n  )\r\n}\r\n\r\n\r\nexport default SocialUrl;","import React, { Component } from 'react';\r\nimport s from './SignInWithGoogle.module.css';\r\nimport cs from './../Common.module.css';\r\nimport { initGAPI, getProfile, signInAuth2, loadAuth2, listenAuth2, getIsSignedIn } from './../API/GAPI';\r\nimport google from './../Assets/google.svg'\r\nimport signOutImg from './../Assets/sign-out.svg'\r\nimport SocialUrl from './../Social/SocialUrl'\r\nimport googlePlus from './../Assets/google-plus.svg'\r\n\r\n\r\n//todo: need to remove token.pickle\r\n\r\nclass SignInWithGoogle extends Component {\r\n\r\n    initClient = async () => {\r\n        try {\r\n            await initGAPI();\r\n            listenAuth2(this.updateSigninStatus);\r\n            this.updateSigninStatus(getIsSignedIn());\r\n            this.showError(\"\");\r\n\r\n        }\r\n        catch (error) {\r\n            this.showError(JSON.stringify(error, null, 2));\r\n        }\r\n    }\r\n\r\n\r\n    updateSigninStatus = (isSignedIn) => {\r\n        var profile;\r\n        if (isSignedIn) {\r\n            profile = getProfile();\r\n        }\r\n\r\n        this.props.updateProfile(profile);\r\n\r\n        this.props.updateIsSignedIn(isSignedIn);\r\n    }\r\n\r\n\r\n\r\n    async componentDidMount() {\r\n        loadAuth2(await this.initClient)\r\n    }\r\n\r\n    showError = (message) => {\r\n        this.props.updateError(message);\r\n    }\r\n\r\n    getButton() {\r\n        var signIn = (\r\n            <input type=\"image\" className={s.avatar} onClick={signInAuth2} src={googlePlus} />\r\n        );\r\n\r\n        var signOutBtn = <button className={cs.button} onClick={this.props.signOut}>Sign Out</button>;\r\n\r\n        return this.props.isSignedIn ? \"\" : signIn;\r\n    }\r\n\r\n    getUserInfo() {\r\n        var spredsheetLink = \"https://docs.google.com/spreadsheets/d/\" + this.props.spreadsheetId;\r\n        if (this.props.profile) {\r\n            return (\r\n                <div>\r\n                    {/* <label className=\"w3-text-white\">{this.props.profile.getName()}</label> */}\r\n                    <p align=\"center\">\r\n                        <SocialUrl url={spredsheetLink} icon={this.props.profile.getImageUrl()} />\r\n                    </p>\r\n                    <p align=\"center\">\r\n                        <input type=\"image\" className={s.avatar} onClick={this.props.signOut} src={signOutImg} />\r\n                    </p>\r\n                </div>\r\n            );\r\n        }\r\n        return '';\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={s.main} align=\"center\">\r\n                {this.getUserInfo()}\r\n                <p>\r\n                    {this.getButton()}\r\n                </p>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default SignInWithGoogle;","import { signOutAuth2 } from \"../API/GAPI\"\r\nimport { resetStickers, updatePdfOutput } from \"./stickers-reducer\";\r\n\r\nconst UPDATE_IS_SIGNED_IN = 'UPDATE_IS_SIGNED_IN';\r\nconst UPDATE_PROFILE = 'UPDATE_PROFILE';\r\n\r\nvar initialState = {\r\n    isSignedIn: false,\r\n    profile: ''\r\n}\r\n\r\nconst signinReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case UPDATE_IS_SIGNED_IN:\r\n            return { ...state, isSignedIn: action.isSignedIn }\r\n        case UPDATE_PROFILE:\r\n            return { ...state, profile: action.profile }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const signOut = () => {\r\n    return (dispatch) => {\r\n        signOutAuth2();\r\n        dispatch(updateIsSignedIn(false));\r\n        dispatch(resetStickers());\r\n        dispatch(updatePdfOutput(\"\"));\r\n    }\r\n}\r\n\r\nexport const updateIsSignedIn = (isSignedIn) => ({ type: UPDATE_IS_SIGNED_IN, isSignedIn: isSignedIn });\r\nexport const updateProfile = (profile) => ({ type: UPDATE_PROFILE, profile: profile });\r\n\r\nexport default signinReducer;","export let getProfile = (state) => {\r\n    return state.signInPage.profile;\r\n}\r\n\r\nexport let getIsSignedIn = (state) => {\r\n    return state.signInPage.isSignedIn;\r\n}","import React from 'react';\r\nimport SigninWithGoogle from './SignInWithGoogle'\r\nimport { updateIsSignedIn, updateProfile, signOut } from './../redux/signin-reducer'\r\nimport { updateError } from './../redux/error-reducer'\r\nimport { connect } from 'react-redux'\r\nimport { getProfile, getIsSignedIn } from '../redux/signin-selectors';\r\nimport { getSpreadseetId } from '../redux/spreadsheet-selectors';\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        profile: getProfile(state),\r\n        isSignedIn: getIsSignedIn(state),\r\n        spreadsheetId: getSpreadseetId(state)\r\n    }\r\n}\r\n\r\n\r\nconst SigninWithGoogleContainer = connect(mapStateToProps, { signOut, updateError, updateProfile, updateIsSignedIn })(SigninWithGoogle);\r\n\r\nexport default SigninWithGoogleContainer;\r\n\r\n","import React, { Component } from 'react';\r\nimport s from './ErrorBar.module.css';\r\n\r\n\r\nclass ErrorBar extends Component {\r\n\r\n    render() {\r\n        console.log(this.props.error)\r\n        return (<div></div>\r\n            // <div className={s.errorBar}>\r\n            //     <p align=\"center\">\r\n            //         {this.props.error}\r\n            //     </p>\r\n            // </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ErrorBar;","export let getErrorSelector = (state) =>{\r\n    return state.errorPage.error;\r\n}","import React from 'react';\r\nimport ErrorBar from './ErrorBar'\r\nimport { connect } from 'react-redux'\r\nimport { getErrorSelector } from '../redux/error-selectors';\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        error: getErrorSelector(state)\r\n    }\r\n}\r\n\r\nconst ErrorBarContainer = connect(mapStateToProps, {})(ErrorBar);\r\n\r\nexport default ErrorBarContainer;","import React, { Component } from 'react';\r\nimport SigninWithGoogleContainer from '../SignInWithGoogle/SigninWitGoogleContainer';\r\nimport ErrorBarContainer from '../ErrorBar/ErrorBarContainer';\r\nimport SocialUrl from './../Social/SocialUrl'\r\nimport github from './../Assets/github.svg'\r\nimport youtube from './../Assets/youtube.svg'\r\nimport print from './../Assets/print.svg'\r\nimport translate from './../Assets/translate.svg'\r\nimport s from './Navbar.module.css';\r\nimport { htmlToPdf } from './../utils/htmlToPdf'\r\nimport spinner  from './../Assets/spinner.svg'\r\n\r\nconst pageHeightPixels = 98 * 8;\r\nconst pdfFileName = \"Stickers to print.pdf\";\r\nconst pageOrientation = \"landscape\";\r\n\r\nconst Navbar = ({ pdf, updateIsGeneratingPdf, updateIsShowIframe, updatePdfOutput, pdfOutput, isGeneratingPdf }) => {\r\n\r\n    let onClickPdf = async () => {\r\n\r\n        if (pdfOutput == \"\") {\r\n            updateIsGeneratingPdf(true);\r\n            var newPdfOutput = await htmlToPdf(pageHeightPixels, pageOrientation, pdf, pdfFileName);\r\n            updatePdfOutput(newPdfOutput);\r\n            updateIsGeneratingPdf(false);\r\n        }\r\n\r\n        updateIsShowIframe(true);\r\n\r\n    }\r\n\r\n    let getPrintButton = () => {\r\n        return isGeneratingPdf == false ? <input type=\"image\" onClick={onClickPdf} src={print} /> : <img src={spinner} />;\r\n    }\r\n\r\n    return (\r\n        <div className={s.navbar}>\r\n\r\n            <div className={s.main}>\r\n                <p align=\"center\">\r\n                    {getPrintButton()}\r\n                </p>\r\n            </div>\r\n            <div>\r\n                <p align=\"center\">\r\n                    <p>\r\n                        <SocialUrl url=\"https://translate.google.com/#en/ru/\" icon={translate} />\r\n                    </p>\r\n                    <p>\r\n                        <SocialUrl url=\"https://www.youtube.com/watch?v=C-FKXagcLRQ&list=PLQPXxMwGR_nkJyvzRnj8NGgHwgvpdipy4\" icon={youtube} />\r\n                    </p>\r\n                    <p>\r\n                        <SocialUrl url=\"https://github.com/fargutvest/WordsStickers\" icon={github} />\r\n                    </p>\r\n                </p>\r\n                <p>\r\n                    <ErrorBarContainer />\r\n                </p>\r\n                <SigninWithGoogleContainer />\r\n            </div>\r\n\r\n        </div >\r\n    );\r\n\r\n}\r\n\r\nexport default Navbar;","import React from 'react';\r\nimport Navbar from './Navbar'\r\nimport { connect } from 'react-redux';\r\nimport { getPdfRef, getPdfOutput, getIsGeneratingPdf } from '../redux/stickers-selectors';\r\nimport { updateIsGeneratingPdf, updateIsShowIframe, updatePdfOutput } from '../redux/stickers-reducer'\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        pdf: getPdfRef(state),\r\n        pdfOutput: getPdfOutput(state),\r\n        isGeneratingPdf: getIsGeneratingPdf(state)\r\n    }\r\n}\r\n\r\nconst NavbarContainter = connect(mapStateToProps, {updateIsGeneratingPdf, updateIsShowIframe, updatePdfOutput})(Navbar);\r\n\r\nexport default NavbarContainter;","import React, { Component } from 'react';\r\nimport s from './Sticker.module.css';\r\n\r\n\r\nconst Sticker = ({ onMouseOver, onMouseLeave, onStudied, sticker }) => {\r\n\r\n  let onMouseOverHandler = () => {\r\n    onMouseOver(sticker.id);\r\n  }\r\n\r\n  let onMouseLeaveHandler = () => {\r\n    onMouseLeave(sticker.id);\r\n  }\r\n\r\n  let onClickHandler = () => {\r\n    onStudied({ stickerId: sticker.id, isStudied: !sticker.isStudied })\r\n  }\r\n\r\n  var mouseOver = sticker.isMouseOver ? s.MouseOver : \"\";\r\n  var studied = sticker.isStudied ? s.Studied : \"\"\r\n\r\n  \r\n  return (\r\n    <div className={`${s.Sticker} ${mouseOver} ${studied}`} onMouseOver={onMouseOverHandler} onMouseLeave={onMouseLeaveHandler} onClick={onClickHandler}>\r\n      <div className={`${s.Foreign} ${s.Part}`}>{sticker.content.Foreign}</div>\r\n      {/* <div className={`${s.Spelling} ${s.Part}`}>{sticker.content.Spelling}</div> */}\r\n      <div className={`${s.Native} ${s.Part}`}>{sticker.content.Native}</div>\r\n    </div>\r\n  );\r\n\r\n}\r\n\r\nexport default Sticker;","import React, { Component } from 'react';\r\nimport s from './Stickers.module.css';\r\nimport Sticker from './Sticker/Sticker';\r\n\r\nconst pdfRef = React.createRef();\r\nconst countStickersInRow = 4;\r\n\r\nclass Stickers extends Component {\r\n\r\n  buildStickersPage() {\r\n    var stickers = this.props.stickers.reverse();\r\n\r\n    var stickersPage = [];\r\n    var stickersCounter = 0;\r\n    var stickersRow = [];\r\n\r\n    stickers.forEach(sticker => {\r\n      \r\n      stickersCounter++;\r\n      stickersRow.push(<Sticker sticker={sticker} onMouseOver={this.props.mouseOverSticker} onMouseLeave={this.props.mouseLeaveSticker}\r\n        onStudied={this.props.studiedSticker} />);\r\n\r\n      if (stickersRow.length == countStickersInRow || stickers.length - stickersCounter == 0) {\r\n        stickersPage.push(<div className={s.StickersRow}>{stickersRow}</div>);\r\n        stickersRow = [];\r\n      }\r\n    });\r\n\r\n    return stickersPage;\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.updatePdf(pdfRef);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className={s.main} >\r\n        <div ref = {pdfRef}>\r\n          {this.buildStickersPage()}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\nexport default Stickers;","import React, { Component } from 'react';\r\nimport Stickers from './Stickers'\r\nimport { updatePdf } from './../redux/stickers-reducer'\r\nimport { mouseOverSticker, mouseLeaveSticker, studiedSticker } from './../redux/stickers-reducer';\r\nimport { connect } from 'react-redux'\r\nimport Preloader from './../Components/Preloader/Preloader.js'\r\nimport { getStickers } from './../redux/stickers-reducer';\r\nimport { getStickersSelector, getIsFetchingStickers, getStickersAreFetched } from './../redux/stickers-selectors'\r\nimport { getIsSignedIn } from './../redux/signin-selectors'\r\n\r\n\r\nclass StickersContainer extends Component {\r\n\r\n    render() {\r\n        if (this.props.isSignedIn && this.props.stickersAreFetched == false && this.props.isFetchingStickers === false) {\r\n            this.props.getStickers();\r\n        }\r\n\r\n        return <Stickers {...this.props} />\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        stickers: getStickersSelector(state),\r\n        isSignedIn: getIsSignedIn(state),\r\n        isFetchingStickers: getIsFetchingStickers(state),\r\n        stickersAreFetched : getStickersAreFetched(state)\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {\r\n    updatePdf,\r\n    mouseOverSticker,\r\n    mouseLeaveSticker,\r\n    studiedSticker,\r\n    getStickers\r\n})(StickersContainer);\r\n","import React, { Component } from 'react';\r\nimport preloader from './../../Assets/preloader.svg'\r\nimport s from './Preloader.module.css'\r\n\r\nclass Preloader extends Component {\r\n  render() {\r\n    return (\r\n      <div className={s.preloader}>\r\n        <img src={preloader} />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nexport default Preloader;","import React, { Component } from 'react';\r\nimport s from './PlaySticker.module.css';\r\n\r\n\r\nconst PlaySticker = ({ mouseOverSticker, mouseLeaveSticker, studiedSticker, sticker }) => {\r\n\r\n  let onMouseOverHandler = () => {\r\n    mouseOverSticker(sticker.id);\r\n  }\r\n\r\n  let onMouseLeaveHandler = () => {\r\n    mouseLeaveSticker(sticker.id);\r\n  }\r\n\r\n  let onClickHandler = () => {\r\n    studiedSticker({ stickerId: sticker.id, isStudied: !sticker.isStudied })\r\n  }\r\n\r\n  var mouseOver = sticker.isMouseOver ? s.MouseOver : \"\";\r\n  var studied = sticker.isStudied ? s.Studied : \"\"\r\n\r\n  \r\n  return (\r\n    <div className={`${s.Sticker} ${mouseOver} ${studied}`} onMouseOver={onMouseOverHandler} onMouseLeave={onMouseLeaveHandler} onClick={onClickHandler}>\r\n      <div className={`${s.Foreign} ${s.Part}`}>{sticker.content.Foreign}</div>\r\n      {/* <div className={`${s.Spelling} ${s.Part}`}>{sticker.content.Spelling}</div> */}\r\n      <div className={`${s.Native} ${s.Part}`}>{sticker.content.Native}</div>\r\n    </div>\r\n  );\r\n\r\n}\r\n\r\nexport default PlaySticker;","import React, { Component } from 'react';\r\nimport PlaySticker from './PlaySticker'\r\nimport { updatePdf } from './../../redux/stickers-reducer'\r\nimport { mouseOverSticker, mouseLeaveSticker, studiedSticker, getStickers } from './../../redux/stickers-reducer';\r\nimport { connect } from 'react-redux'\r\nimport Preloader from './../../Components/Preloader/Preloader.js'\r\nimport { getStickersSelector, getIsFetchingStickers, getStickersAreFetched } from './../../redux/stickers-selectors'\r\nimport { getIsSignedIn } from './../../redux/signin-selectors'\r\n\r\n\r\nclass PlayStickerContainer extends Component {\r\n\r\n    render() {\r\n          if (this.props.isSignedIn && this.props.stickersAreFetched == false && this.props.isFetchingStickers === false) {\r\n            this.props.getStickers();\r\n        }\r\n\r\n        var sticker = this.props.stickers[Math.floor(Math.random() * this.props.stickers.length)];\r\n\r\n        return <PlaySticker {...this.props} sticker={sticker} />\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        stickers: getStickersSelector(state),\r\n        isSignedIn: getIsSignedIn(state),\r\n        isFetchingStickers: getIsFetchingStickers(state),\r\n        stickersAreFetched : getStickersAreFetched(state)\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {\r\n    updatePdf,\r\n    mouseOverSticker,\r\n    mouseLeaveSticker,\r\n    studiedSticker,\r\n    getStickers\r\n})(PlayStickerContainer);\r\n","import React, { Component } from 'react';\r\nimport StickersContainer from '../Stickers/StickersContainer';\r\nimport PlayStickerContainer from '../Stickers/PlaySticker/PlayStickerContainer';\r\nimport s from './Content.module.css'\r\n\r\n\r\nclass Content extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className={s.content}>\r\n                {window.innerWidth > 980 ? <StickersContainer /> : <PlayStickerContainer />}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Content;","import React, { Component } from 'react';\r\nimport s from './Footer.module.css'\r\n\r\nclass Footer extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className={s.footer}>\r\n                \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Footer;","import React, { Component } from 'react';\r\nimport preloader from './../../Assets/preloader.svg'\r\nimport s from './SplashScreen.module.css'\r\n\r\nclass SplashScreen extends Component {\r\n    render() {\r\n        return (\r\n            <div className={s.splashScreen}>\r\n                <img className={s.preloader} src={preloader} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default SplashScreen;","import React, { Component } from 'react';\r\nimport s from './IFrame.module.css'\r\nimport exit from '../../Assets/exit.svg'\r\n\r\nconst IFrame = ({ content, updateIsShowIframe }) => {\r\n\r\n    let onClick = () => {\r\n        updateIsShowIframe(false);\r\n    }\r\n\r\n    return (\r\n        <div className={s.iframe}>\r\n            <input className={s.exitButton} type=\"image\" src={exit} onClick={onClick} />\r\n            <iframe src={content} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default IFrame;","import React, { Component } from 'react';\r\nimport s from './App.module.css';\r\nimport Header from './Header/Header.js';\r\nimport NavbarContainter from './Navbar/NavbarContainer'\r\nimport Content from './Content/Content.jsx';\r\nimport Footer from './Footer/Footer.jsx';\r\nimport SplashScreen from './Components/SplashScreen/SplashScreen';\r\nimport IFrame from './Components/IFrame/IFrame';\r\n\r\nclass App extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <div className={s.app_wrapper}>\r\n        {/* <Header /> */}\r\n         {this.props.isShowIframe ? <IFrame content = {this.props.pdfOutput} updateIsShowIframe = {this.props.updateIsShowIframe}/> : \"\" } \r\n         {this.props.isFetchingStickers || this.props.isGeneratingPdf ? <SplashScreen /> : \"\" }\r\n        <NavbarContainter />\r\n        <Content />\r\n        {/* <Footer /> */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux'\r\nimport { getIsFetchingStickers, getIsGeneratingPdf, getIsShowIframe, getPdfOutput } from './redux/stickers-selectors'\r\nimport App from './App';\r\nimport { updateIsShowIframe } from './redux/stickers-reducer' \r\n\r\n\r\nclass AppContainer extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <App {...this.props} />\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        isFetchingStickers: getIsFetchingStickers(state),\r\n        isGeneratingPdf: getIsGeneratingPdf(state),\r\n        isShowIframe: getIsShowIframe(state),\r\n        pdfOutput: getPdfOutput(state)\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {updateIsShowIframe})(AppContainer);\r\n","import { listFiles, cleanFiles, getLastCreatedFile } from './../API/GDriveAPI'\r\nconst UPDATE_FILES_LIST = 'UPDATE_FILES_LIST';\r\n\r\nvar initialState = {\r\n    phrasebookFilesTree: {\r\n        latestPhrasebookFile: '',\r\n        allPhrasebookFiles: []\r\n    }\r\n\r\n}\r\n\r\nconst gdriveReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case UPDATE_FILES_LIST:\r\n            return { ...state, phrasebookFilesTree: { ...state.phrasebookFilesTree, allPhrasebookFiles: action.allPhrasebookFiles, latestPhrasebookFile: action.latestPhrasebookFile } }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const getPhrasebookFiles = () => {\r\n    return (dispatch) => {\r\n        listFiles((files) => {\r\n            var latest = getLastCreatedFile(files);\r\n            dispatch(updatePhrasebookFiles(files, latest));\r\n        });\r\n    }\r\n}\r\n\r\nexport const cleanPhrasebookFiles = (filesToClean) => {\r\n    return (dispatch) => {\r\n        cleanFiles(filesToClean);\r\n        listFiles((files) => {\r\n            var latest = getLastCreatedFile(files);\r\n            dispatch(updatePhrasebookFiles(files, latest));\r\n        });\r\n    }\r\n}\r\n\r\nexport const updatePhrasebookFiles = (allPhrasebookFiles, latestPhrasebookFile) => ({ type: UPDATE_FILES_LIST, allPhrasebookFiles: allPhrasebookFiles, latestPhrasebookFile: latestPhrasebookFile });\r\n\r\nexport default gdriveReducer;","import { createStore, combineReducers, applyMiddleware } from \"redux\";\r\nimport errorReducer from \"./error-reducer\";\r\nimport gdriveReducer from \"./gdrive-reducer\";\r\nimport spreadsheetReducer from \"./spreadsheet-reducer\";\r\nimport stickersReducer from \"./stickers-reducer\";\r\nimport signinReducer from \"./signin-reducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport { reducer as formReducer } from 'redux-form'\r\n\r\n\r\nvar reducers = combineReducers({\r\n    errorPage: errorReducer,\r\n    spreadsheetPage: spreadsheetReducer,\r\n    stickersPage: stickersReducer,\r\n    filesListPage: gdriveReducer,\r\n    signInPage: signinReducer,\r\n    form: formReducer\r\n});\r\n\r\nvar store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n\r\nexport default store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport AppContainer from './AppContainer';\r\nimport './index.css';\r\nimport store from './redux/store-redux.js';\r\nimport { HashRouter } from \"react-router-dom\";\r\nimport { Provider } from 'react-redux'\r\n\r\nlet rerender = () => {\r\n  ReactDOM.render((\r\n    <HashRouter>\r\n      <Provider store={store}>\r\n        <AppContainer />\r\n      </Provider>\r\n    </HashRouter>\r\n  ),\r\n    document.getElementById('root')\r\n  );\r\n}\r\n\r\nstore.subscribe(() => {\r\n  rerender();\r\n});\r\n\r\nwindow.store = store;\r\nrerender();\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Sticker\":\"Sticker_Sticker__2C1lR\",\"MouseOver\":\"Sticker_MouseOver__3pIAy\",\"Studied\":\"Sticker_Studied__1yxuG\",\"Part\":\"Sticker_Part__1q4BR\",\"Foreign\":\"Sticker_Foreign__39E9S\",\"Spelling\":\"Sticker_Spelling__3u2wB\",\"Native\":\"Sticker_Native__12-r2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Sticker\":\"PlaySticker_Sticker__7COq9\",\"Part\":\"PlaySticker_Part__3vDru\",\"Foreign\":\"PlaySticker_Foreign__37dVn\",\"Native\":\"PlaySticker_Native__2AZKw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Common_button__3K4Id\",\"remove\":\"Common_remove__3IKsV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bar\":\"ReadSpreadsheet_bar__3TLaL\",\"floatRight\":\"ReadSpreadsheet_floatRight__1Bdqn\",\"form\":\"ReadSpreadsheet_form__1RP3J\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormControls_formControl__wjkt2\",\"error\":\"FormControls_error__bFZvx\"};","module.exports = __webpack_public_path__ + \"static/media/preloader.b1b0a1b6.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"google_button\":\"SignInWithGoogle_google_button__LIWyA\",\"google_button_icon\":\"SignInWithGoogle_google_button_icon__2rHS9\",\"google_button_icon_plus\":\"SignInWithGoogle_google_button_icon_plus__2F6QZ\",\"google_button_text\":\"SignInWithGoogle_google_button_text__WWb2C\",\"avatar\":\"SignInWithGoogle_avatar__3g2fo\",\"main\":\"SignInWithGoogle_main__3xrFC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"Navbar_navbar__2yQyI\",\"youtubelink\":\"Navbar_youtubelink__2A39N\",\"main\":\"Navbar_main__hHdQo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Stickers_main__3vTOe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"splashScreen\":\"SplashScreen_splashScreen__3fMig\",\"preloader\":\"SplashScreen_preloader__1P5BY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"iframe\":\"IFrame_iframe__1_g_F\",\"exitButton\":\"IFrame_exitButton__3rzzv\"};"],"sourceRoot":""}